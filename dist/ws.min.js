function HideAndShow(e, t) {
    for (var s, i = $(".login-content").children(), n = 0; n < i.length; n++) if ("none" != $(i[n]).css("display")) {
        s = $(i[n]);
        break
    }
    s || (s = $("#login_panel")), s.animate({opacity: 0}, "fast", function () {
        s.hide(), ".container" == e ? $(".login-content").hide() : $(".login-content").show(), e && ((e = $(e)).show(), e.css("opacity", "0"), e.animate({opacity: 1}, "slow", t))
    })
}

function initIos() {
    window.isios = !0, $("<style type='text/css'>body{-webkit-user-select:none;-webkit-user-drag:none;}</style>").appendTo("head"), $(".download_cmd").remove()
}

function showNews(e) {
    HideAndShow($("#new_panel ")), $("#news_frame").attr("src", "/news/" + e + ".html")
}

function ClearRoomContent() {
    MessagePage && (MessagePage.remove(), MessagePage = null)
}

!function () {
    "use strict";
    var i, s;

    function e(e) {
        var t = $(this).attr("command");
        switch (t) {
            case"ToRolePanel":
                HideAndShow($("#role_panel"));
                break;
            case"ToServerPanel":
                HideAndShow($("#slist_panel"));
                break;
            case"ToLogin":
                HideAndShow($("#login_panel"));
                break;
            case"ToRegist":
                HideAndShow($("#regist_panel"));
                break;
            case"Forget":
                break;
            case"CancleRegist":
                HideAndShow($("#login_panel"));
                break;
            case"Down":
                HideAndShow($("#download"));
                break;
            case"ToUpdate":
                HideAndShow($("#pwd_panel"));
                break;
            default:
                o[t]()
        }
    }

    $(function () {
        $(".login-content").on("click", ".panel_item", e), $(".container").on("click", r), $(".role-list").on("click", ".role-item", function () {
            $(this).parent().find(".select").removeClass("select"), $(this).addClass("select")
        }), $(".channel-box").on("click", "span", m), $(".combat-commands").on("click", ".pfm-item", E.Perform), $(".sender-box").on("keyup", y), $(".room_items").on("click", ".room-item", T.selectItem), $(".right-bar,.bottom-bar").on("click", ".tool-item", d), $(".map-panel").on("click", function () {
            this.last_click = this.last_click || 0, 500 < Date.now() - this.last_click ? this.last_click = Date.now() : q.show("map")
        }), $(".sender-btn").on("click", x), $(".room_exits").on("mousedown", T.before_click_exits).on("mouseup", T.click_exits), $(".room-title>.map-icon").on("click", function () {
            A.LoadMap()
        }), $(".validnum-box>.validnum-btn").on("click", a), T.init(), function () {
            if (!h("p")) {
                return $("#login_panel").show()
            }
            l()
        }()
    });
    var n, t, o = {
        ResetPwd: function () {
            var e = $("#reset_name").val();
            if (!e) return w("#reset_name", "请输入用户名");
            if (!/^[a-z0-9]{5,15}$/.test(e)) return w("#reset_name", "用户名格式错误,需要5-15位字母开头的字母，数字或下划线，不区分大小写");
            var t = $("#reset_phone").val();
            if (!t) return w("#reset_phone", "请输入你的帐号绑定的手机号码");
            if (!/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/.test(t)) return w("#reset_phone", "手机号码格式错误");
            var s = $("#reset_no").val();
            if (!s) return w("#reset_no", "请输入你的帐号绑定的手机号码");
            if (!/^\d{4}$/.test(s)) return w("#reset_no", "请输入四位数字的验证码");
            var i = $("#reset_pwd1").val();
            if (!i) return w("#reset_pwd1", "请输入你的新密码");
            var n = $("#reset_pwd2").val();
            return n ? n.length < 6 || 20 < n.length ? w("#update_pwd2", "密码长度在6到20之间") : n != i ? w("#reset_pwd2", "两次密码输入不一致") : (k("正在修改密码", "#reset_panel"), void G.UserAPI.ResetPassword(e, t, s, i, function (e) {
                e ? (w("#reset_pwd2", e), HideAndShow("#reset_panel")) : l()
            })) : w("#reset_pwd2", "请重复输入你的新密码")
        }, ReLogin: function () {
            HideAndShow($("#login_panel"));
            var e = new Date;
            e.setTime(-1e3);
            for (var t = document.cookie.split("; "), s = 0; s < t.length; s++) {
                var i = t[s].split("=");
                document.cookie = i[0] + "=''; expires=" + e.toGMTString()
            }
        }, UpdatePwd: function () {
            var e = $("#update_pwd1").val(), t = $("#update_pwd2").val(), s = $("#update_pwd3").val();
            return e.length < 6 || 20 < e.length ? w("#update_pwd1", "密码长度在6到20之间") : t.length < 6 || 20 < t.length ? w("#update_pwd2", "密码长度在6到20之间") : s != t ? w("#update_pwd3", "两次密码输入不一致") : (k("正在修改密码", "#pwd_panel"), void G.UserAPI.ChangePassword(e, t, function (e) {
                e.code ? HideAndShow($("#role_panel")) : (w("#update_pwd1", e.message), HideAndShow("#pwd_panel"))
            }))
        }, LoginIn: function () {
            var e = $("#login_name").val().toLowerCase(), t = $("#login_pwd").val();
            return e ? /^[a-z0-9]{5,15}$/.test(e) ? t ? t.length < 6 || 20 < t.length ? w("#login_pwd", "密码长度在6到20之间") : (k("正在登录", "#login_panel"), void G.UserAPI.Login(e, t, function (e) {
                e.code ? l() : (w("#login_name", e.message), HideAndShow("#login_panel"))
            })) : w("#login_pwd", "请输入密码") : w("#login_name", "用户名格式错误,需要5-15位字母开头的字母，数字或下划线，不区分大小写") : w("#login_name", "请输入用户名")
        }, SelectServer: function () {
            if (n) {
                var e = parseInt($(".server-list>.select").attr("index"));
                if (!(0 <= e && e < n.length)) return U.Show({content: "你没有选择要连接的服务器。"});
                var t = n[e];
                t || U.Show({content: "你没有选择要连接的服务器。"}), k("正在连接服务器"), g(t), function (e, t) {
                    var s = new Date;
                    s.setTime(s.getTime() + 2592e7);
                    s.toUTCString();
                    document.cookie = e + "=" + t + "; expires=" + s.toGMTString()
                }("s", e)
            }
        }, SelectRole: function () {
            var e = $(".role-list>.select");
            e.length && (c("login " + e.attr("roleid")), k("正在进入游戏", "#role_panel"))
        }, CreateRole: function () {
            var e = {};
            return e.name = $("#reg_name").val(), e.gender = $("#gender_0").is(":checked") ? 1 : 2, e.str = parseInt($("#reg_str").val()), e.con = parseInt($("#reg_con").val()), e.dex = parseInt($("#reg_dex").val()), e.int = parseInt($("#reg_int").val()), /^[\u4E00-\u9FA5]{2,5}$/.test(e.name) ? e.str < 15 || 30 < e.str ? w("#reg_name", "臂力需要在15-30之间") : e.con < 15 || 30 < e.con ? w("#reg_name", "根骨需要在15-30之间") : e.dex < 15 || 30 < e.dex ? w("#reg_name", "身法需要在15-30之间") : e.int < 15 || 30 < e.int ? w("#reg_name", "悟性需要在15-30之间") : e.str + e.con + e.dex + e.int != 80 ? w("#reg_name", "先天属性需要在15-30之间，并且总和等于80") : (k("正在创建角色", "#addrole_panel"), void c("createrole " + e.name + " " + e.gender + " " + e.str + " " + e.con + " " + e.dex + " " + e.int)) : w("#reg_name", "名称格式错误，只能使用2-5位中文字符")
        }, AddRole: function () {
            if (4 < $(".role-list>.role-item").length) return U.Show({content: "你只能最多创建五个角色"});
            HideAndShow($("#addrole_panel")), C("name"), C("prop"), C("id")
        }, DeleteRole: function () {
            var e = $(".role-list>.select");
            if (e.length) {
                var t = e.attr("roleid");
                t && U.Show({
                    content: "是否确认删除角色：" + e.html(), onOK: function () {
                        c("deleterole " + t)
                    }
                })
            }
        }, Regist: function () {
            var e = $("#regist_name").val().toLowerCase(), t = $("#regist_pwd1").val();
            if (!e) return w("#regist_name", "请输入用户名");
            if (!/^[a-z0-9]{5,15}$/.test(e)) return w("#regist_name", "用户名需要是5-10个英文字符");
            if (!t) return w("#regist_pwd1", "请输入密码");
            if (t.length < 6 || 20 < t.length) return w("#regist_pwd1", "密码长度在6到20之间");
            if (t != $("#regist_pwd2").val()) return w("#regist_pwd2", "重复密码输入不一致，请重新输入");
            var s = {Name: e, PassWord: t};
            G.UserAPI.Regist(s, function (e) {
                e.code ? l() : (w("#regist_name", e.message), HideAndShow("#regist_panel"))
            })
        }
    };

    function a() {
        var e = $(this);
        if (!e.is(":disabled")) {
            var t = e.parent().prev().prev(), s = t.val();
            if (!s) return w(t, "请输入你的帐号绑定的手机号码");
            if (!/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/.test(s)) return w(t, "手机号码格式错误");
            G.UserAPI.SendValidateCode(s, function (e) {
            }), e.prop("disabled", !0), e.html("120秒后重新发送"), function e(t, s) {
                120 == t ? (s.prop("disabled", !1), s.html("发送验证码")) : (s.html(120 - t + "秒后重新发送"), t++, window.setTimeout(e.bind(this, t, s), 1e3))
            }(0, e)
        }
    }

    function l() {
        if (!n) return k("正在获取服务器列表"), void G.UserAPI.GetServer(function (e) {
            e && "string" != typeof e ? (n = e || [], function () {
                if (!n) return;
                try {
                    "localhost" == window.location.hostname && (n.push({
                        ID: 99,
                        Name: "本地测试1",
                        IP: "127.0.0.1",
                        Port: 25631
                    }), n.push({ID: 100, Name: "本地测试2", IP: "127.0.0.1", Port: 25632}));
                    for (var e = [], t = ["武神传说", "武神传说", "武神传说", "武神传说"], s = 0; s < n.length; s++) n[s].IsTest && "?test" != window.location.search && "localhost" != window.location.hostname ? n.splice(s, 1) : (e.push("<li class='role-item"), 0 == s && e.push(" select"), e.push("' index='" + s + "'>"), e.push(t[s]), e.push("&nbsp;&nbsp;"), e.push(n[s].Name), 2 == n[s].ID && e.push("<span style='color:red;font-size:0.5rem;line-height:2rem;height:2rem;'>&nbsp;（推荐）</span>"), e.push("</li>"));
                    $(".server-list").html(e.join("")).on("click", "li", function () {
                        var e = $(this);
                        e.is(".select") || (e.parent().find(".select").removeClass("select"), e.addClass("select"))
                    })
                } catch (e) {
                }
            }(), l()) : w("#login_pwd", "获取服务器列表出错")
        });
        var e = n;
        if (e && e.length) {
            var t = h("s"), s = t ? n[t] : 1 == e.length ? n[0] : null;
            if (s) return k("正在连接服务器"), g(s);
            HideAndShow("#slist_panel")
        } else HideAndShow("#login_panel"), w("#login_pwd", "获取服务器列表出错")
    }

    function h(e) {
        var t, s = new RegExp("(^| )" + e + "=([^;]*)(;|$)");
        return (t = document.cookie.match(s)) ? unescape(t[2]) : null
    }

    function r(e) {
        var t = $(e.target), s = t.attr("cmd");
        if (s || (s = t.parent().attr("cmd")), s) {
            if ("_" == s[0]) {
                var i = s.split(" ");
                switch (i[0]) {
                    case"_confirm":
                        U.Process(i);
                        break;
                    case"_setting":
                        R.save(i[1], i[2]);
                        break;
                    case"_close":
                        j.Close(t)
                }
            } else c(s);
            return !1
        }
        return u && (t.closest(".chat-panel").length || ($(".chat-panel").addClass("hide"), u = !1)), U.Close(), !1
    }

    function c(e) {
        if (!_) return i && i.Connected() ? void i.Send(e) : (t = e, S("<red>连接中断，正在重新连线...</red>"), void g(s))
    }

    function m() {
        var e, t = $(this), s = t.attr("channel");
        if ("emote" != s) {
            if (!t.is(".selected")) {
                var i = t.parent();
                return i.children().removeClass("selected"), t.addClass("selected"), i.attr("channel", s), $(".sender-box").focus(), !1
            }
        } else (e = $(".channel-emotes")).is(".hide") ? (e.removeClass("hide"), T.emtoes || (c("emote"), T.emtoes = [], $(".sender-box").blur(), e.on("click", "span", function () {
            var e = $(this).html();
            $(".sender-box").val("*" + e).focus(), $(".channel-emotes").addClass("hide")
        }))) : $(".channel-emotes").addClass("hide")
    }

    function d(e) {
        var t = $(this).attr("command");
        if (t) switch (t) {
            case"showtool":
                v.ShowTools();
                break;
            case"showchat":
                return function () {
                    var e = $(".chat-panel").toggleClass("hide");
                    e.is(".hide") ? u = !1 : (u = !0, e.find("input").val("").focus());
                    return !1
                }();
            case"showcombat":
                return E.Show();
            case"stopstate":
                c("stopstate");
                break;
            default:
                q.show(t)
        }
    }

    var u = !1;
    var p, f, v = {
        Tools: null, HideTool: null, ToolState: 0, ToolOpacity: 0, ToolSpeed: 0, InitTools: function () {
            if (!this.Tools) {
                var e = $(".right-bar>.tool-item");
                this.Tools = [];
                for (var t = 0; t < e.length; t++) this.Tools.push(e[t]);
                this.HideTool = $(".br-tool")
            }
        }, ShowTools: function () {
            if (this.InitTools(), 1 != this.ToolState) {
                if (0 == this.ToolState) {
                    for (var e = 0; e < this.Tools.length; e++) this.Tools[e].style.display = "", this.Tools[e].style.opacity = 0;
                    this.ToolSpeed = 200, this.ToolOpacity = 0, $(this.HideTool).removeClass("hide-tool")
                } else this.ToolOpacity = 100, this.ToolSpeed = 100, $(this.HideTool).addClass("hide-tool");
                window.setTimeout(this.ShowToolsAnimate.bind(this, this.ToolState), 100), this.ToolState = 1
            }
        }, ShowToolsAnimate: function (e) {
            if (0 == e) {
                this.ToolOpacity = this.ToolOpacity + this.ToolSpeed;
                for (var t = this.ToolOpacity, s = this.Tools.length - 1; 0 <= s && (this.Tools[s].style.opacity = t < 0 ? 0 : 100 < t ? 1 : t / 100, !((t -= 20) < 0)); s--) ;
                this.ToolOpacity -= 30, t < 100 ? window.setTimeout(this.ShowToolsAnimate.bind(this, e), 100) : this.ToolState = 2
            } else {
                this.ToolOpacity = this.ToolOpacity - this.ToolSpeed;
                for (t = this.ToolOpacity, s = 0; s < this.Tools.length && (this.Tools[s].style.opacity = t < 0 ? 0 : 100 < t ? 1 : t / 100, !(100 <= (t += 20))); s++) ;
                if (this.ToolOpacity -= 20, 0 <= t) window.setTimeout(this.ShowToolsAnimate.bind(this, e), 100); else for (s = this.ToolState = 0; s < this.Tools.length; s++) this.Tools[s].style.display = "none"
            }
        }, showFlag: function (e, t) {
            this.InitTools(), t < 0 ? t = 0 : 99 < t && (t = 99);
            for (var s = 0; s < this.Tools.length; s++) if (this.Tools[s].getAttribute("command") == e) {
                var i = $(this.Tools[s]);
                t ? i.find(".tag").html(t).removeClass("hide") : i.find(".tag").addClass("hide");
                break
            }
        }
    }, _ = !1;

    function g(e, t) {
        _ || (s = e, console.log("重新连接", null == i ? "未连接" : "已连接"), i = new L(e.IP, e.Port), _ = !0, i.OnError = function (e, t) {
            _ = !1, e && (e.isTrusted && (e = "服务器没有响应，请稍后重试"), k("<strong>连接失败：</strong>" + e))
        }, i.OnConnect = function () {
            _ = !1, t || T.player ? c(t ? h("u") + " " + h("p") + " " + t + " " + e.ID : h("u") + " " + h("p") + " " + T.player) : (k("正在获取角色列表..."), c(h("u") + " " + h("p")))
        }, i.OnClose = function (e) {
            _ = !1, console.log(this.Port, this.ChangeServer), this.ChangeServer ? this.ChangeServer = !1 : this.Connected() || (T.player ? (T.clear(), S("<red>你的连接中断了...</red>")) : HideAndShow($("#slist_panel")))
        }, i.OnData = I, i.OnMessage = S, i.Connect())
    }

    function w(e, t) {
        $(e).focus().parent().find(".input-error").remove(), $("<div class='input-error'>" + t + "</div>").insertAfter(e)
    }

    function k(e, t) {
        for (var s = $(".login-content").children(), i = 0; i < s.length; i++) "none" == $(s[i]).css("display") || $(s[i]).is(".signinfo") || $(s[i]).hide();
        $("#loader").css("opacity", 1).show().find("#loader_msg").html(e)
    }

    var b = 0;

    function S(e) {
        f || (f = $("<pre></pre>").appendTo(p)), 1e3 < b && (b = 0, f.empty()), f.append(e + "\n"), b++, T.contentScroll && (p[0].scrollTop = 99999)
    }

    function I(e) {
        var t = T[e.type];
        t && t(e)
    }

    function y(e) {
        13 == e.keyCode && x()
    }

    function x() {
        var e = $(".sender-box").val();
        if (e) {
            if (100 < e.length) return S("<hir>你输入的内容太多了。</hir>");
            var t = $(".channel-box").attr("channel");
            $(".sender-box").val("").focus(), c(t + " " + e)
        }
    }

    function C(e) {
        switch (e) {
            case"name":
                $("#reg_name").val(function (e, t) {
                    t = t || parseInt(2 * Math.random()) + 1;
                    var s = [];
                    if (2 == t) {
                        var i = parseInt(Math.random() * P.length);
                        i % 2 == 1 && (i -= 1), s.push(P[i++]), s.push(P[i])
                    } else s.push(D[parseInt(Math.random() * D.length)]);
                    0 == e ? s.push(H[parseInt(Math.random() * H.length)]) : s.push(O[parseInt(Math.random() * O.length)]);
                    1 < parseInt(4 * Math.random()) && (0 == e ? s.push(H[parseInt(Math.random() * H.length)]) : s.push(O[parseInt(Math.random() * O.length)]));
                    return s.join("")
                }($("#gender_0").is(":checked") ? 0 : 1));
                break;
            case"id":
                $("#reg_id").val(function () {
                    for (var e = "abcdefghijklmnopqrstuvwxyz", t = "123456789", s = [], i = parseInt(3 * Math.random()) + 3, n = 0; n < i; n++) n < 3 ? s.push(e[parseInt(Math.random() * e.length)]) : s.push(t[parseInt(Math.random() * t.length)]);
                    return s.join("")
                }());
                break;
            case"prop":
                var t = function () {
                    for (var e = 20, t = [], s = 0; s < 4; s++) {
                        var i = parseInt(15 * Math.random() + 1);
                        i <= e ? (3 == s ? i = e : e -= i, t[s] = i) : (t[s] = e, e = 0)
                    }
                    var n = {};
                    return n.str = t[0] + 15, n.con = t[1] + 15, n.dex = t[2] + 15, n.int = t[3] + 15, n
                }();
                $("#reg_str").val(t.str), $("#reg_con").val(t.con), $("#reg_dex").val(t.dex), $("#reg_int").val(t.int)
        }
    }

    var T = {
        itemsElement: null, contentScroll: !0, clear: function () {
            q.pack.items = null, q.skills.items = null, this.state(null)
        }, init: function () {
            T.itemsElement = $(".room_items"), (p = $(".content-message")).on("mousedown", function () {
                T.contentScroll = !1
            }), p.on("mouseup", function () {
                T.contentScroll = !0
            })
        }, onContentScroll: function (e) {
            T.auto_scroll ? T.auto_scroll = !1 : T.contentScroll ? (setTimeout(function () {
                T.contentScroll = !0
            }, 4e3), T.contentScroll = !1) : p[0].scrollTop + p.height() >= p[0].scrollHeight && (T.contentScroll = !0)
        }, regist: function (e) {
            e.result && (HideAndShow("#addrole_panel"), $("#addrole_panel .input-error").html(e.result))
        }, flash: function () {
            f && (T._flash_show ? (f.find("fla").hide(), T._flash_show = !1) : (f.find("fla").show(), T._flash_show = !0))
        }, emote: function (e) {
            T.emotes = e.items || 0;
            for (var t = [], s = 0; s < T.emotes.length; s++) t.push("<span>"), t.push(T.emotes[s]), t.push("</span>");
            $(".channel-emotes").html(t.join(""))
        }, deleterole: function (e) {
            if (e.result) {
                var t = $("#role_panel>ul>.content>.role-list>.role-item[roleid='" + e.id + "']");
                t.remove();
                var s = $("#role_panel>ul>.content>.role-list>.role-item");
                t.is(".select") && s.length ? $(s[0]).addClass("select") : s.length || o.AddRole()
            } else U.Show({content: "<span class='input-error'>删除失败</span>"})
        }, cross: function (e) {
            for (var t = null, s = 0; s < n.length; s++) n[s].ID == e.sid && (t = n[s]);
            t && (i.ChangeServer = !0, i.Close(), q.pack.items = null, console.log("重新连接到", t.Name), e.pid || T.die({relive: !0}), g(t, e.pid))
        }, roles: function (e) {
            var t = e.roles;
            if (t.length) {
                HideAndShow("#role_panel");
                for (var s = [], i = 0; i < t.length; i++) s.push("<li class='role-item"), 0 == i && s.push(" select"), s.push("' roleid='" + t[i].id + "'>"), s.push(t[i].title), s.push("&nbsp;&nbsp;"), s.push(t[i].name), s.push("</li>");
                $(".role-list").html(s.join(""))
            } else o.AddRole()
        }, loginerror: function (e) {
            $(".container").hide(), $(".login-content").show(), k("<strong>登陆失败：</strong>" + e.msg)
        }, login: function (e) {
            T.player || HideAndShow(".container"), T.player = e.id, R.load(e.setting), t && (c(t), t = null)
        }, selectItem: function (e) {
            if ($(e.target).is(".status-item")) {
                var t = e.target.getAttribute("sid");
                if (t) return c("status " + t)
            }
            var s = $(this).attr("itemid");
            if (s) {
                if (s == T.player) {
                    var i = $(this).find(".item-name").html(),
                        n = [{cmd: "look " + s, name: "查看"}, {cmd: "dazuo", name: "打坐"}, {
                            cmd: "liaoshang",
                            name: "疗伤"
                        }];
                    return q.team.items && q.team.items.length && (n.push({
                        cmd: "team out",
                        name: "退出队伍"
                    }), q.team.isCap && (n.push({cmd: "team dismiss", name: "解散队伍"}), n.push({
                        cmd: "team set",
                        name: "更改分配方式"
                    }))), void T.item({id: s, desc: i, commands: n})
                }
                console.log(s), c("select " + s)
            }
        }, countwidth: function (e, t) {
            var s = 100 * e / t;
            return s < 0 && (s = 0), 100 < s && (s = 100), s
        }, itemremove: function (e) {
            var t = E.STATUS[e.id];
            if (t) {
                for (var s in t.items) clearInterval(t.items[s].handler);
                var i = t.elem.parent();
                i.next().is(".item-commands") && i.next().remove(), i.remove(), delete E.STATUS[e.id]
            }
        }, itemadd: function (e) {
            if (!R.off_plist || !e.p || e.id == T.player) {
                var t, s = e;
                t = R.item_firstme && s.id == T.player ? $(T.create_roomitem(s)).prependTo(T.itemsElement) : $(T.create_roomitem(s)).appendTo(T.itemsElement), E.STATUS[e.id] && T.itemremove(e), E.AppendStatusItem(s.id, t.find(".item-status-bar"), s.status)
            }
        }, items: function (e) {
            T.itemsElement.empty(), E.STATUS = {};
            for (var t = 0; t < e.items.length; t++) {
                var s, i = e.items[t];
                if (i) if (!R.off_plist || !i.p || i.id == T.player) s = R.item_firstme && i.id == T.player ? $(T.create_roomitem(i)).prependTo(T.itemsElement) : $(T.create_roomitem(i)).appendTo(T.itemsElement), E.AppendStatusItem(i.id, s.find(".item-status-bar"), i.status)
            }
        }, create_roomitem: function (e) {
            var t = [];
            return t.push("<div class='room-item' itemid='" + e.id + "'>"), e.max_hp && (t.push('<div class="item-status"'), E.IsShow || R.show_hp || t.push(' style="display:none;"'), t.push(">"), t.push('<div class="progress hp"><div class="progress-bar" max="' + e.max_hp + '"  style="width:' + T.countwidth(e.hp, e.max_hp) + '%"></div></div>'), t.push('<div class="progress mp"><div class="progress-bar" max="' + e.max_mp + '"   style="width:' + T.countwidth(e.mp, e.max_mp) + '%"></div></div>'), t.push("</div>")), t.push("<span class='item-status-bar'>"), t.push("</span>"), t.push("</span>"), t.push("<span class='item-name'>"), t.push(e.name), t.push("</span>"), t.push("</div>"), t.join("")
        }, room: function (e) {
            if ($(".room_items").html(""), $(".room-name").html(e.name), $(".room_desc").html(e.desc), T.room_name = e.name, !R.keep_msg && f ? (f.remove(), f = null, b = 0) : R.keep_msg && S("你来到了" + e.name + "。"), T.room_path != e.path) {
                E.ShowRoomCommands(e.commands), T.room_path = e.path, A.SetRoom(e)
            }
        }, exits: function (e) {
            var t = e ? e.items : T.room_exits;
            if (t) if (T.room_exits = t, R.exits_dir) {
                for (var s = ["这里明显的出口有："], i = [], n = 0; n < A.DIRS.length; n++) t[A.DIRS[n]] && i.push(A.DIRS[n]);
                for (n = 0; n < i.length; n++) 0 < n && s.push(n == i.length - 1 ? " 和 " : "、"), s.push("<span class='exits-item' dir='" + i[n] + "'>" + i[n] + "</span>");
                i.length ? $(".room_exits").html(s.join("")) : $(".room_exits").html("<HIK>这里没有明显的出口。<HIK>")
            } else $(".room_exits").html(A.CreateExitsMap(t, $(".container").width(), T.room_name))
        }, before_click_exits: function (e) {
            var t = $(e.target);
            t.attr("dir") && (t.is("rect") ? t.attr("fill", "gray") : t.is("text") && t.prev().attr("fill", "gray"))
        }, click_exits: function (e) {
            var t = $(e.target), s = t.attr("dir");
            s && (t.is("rect") ? t.attr("fill", "#232323") : t.is("text") && t.prev().attr("fill", "#232323"), c("go " + s))
        }, item: function (e) {
            if (S(e.desc), e.commands) {
                for (var t = ["<div class='item-commands'>"], s = 0; s < e.commands.length; s++) t.push("<span cmd='" + e.commands[s].cmd + "'>"), t.push(e.commands[s].name), t.push("</span>");
                if (t.push("</div>"), R.show_command && E.STATUS[e.id]) {
                    T.itemsElement.find(".item-commands").remove();
                    var i = E.STATUS[e.id].elem.parent();
                    return $(t.join("")).insertAfter(i), p[0].scrollTop = 99999
                }
                S(t.join(""))
            }
        }, actions: function (e) {
            E.ShowActions(e)
        }, cmds: function (e) {
            if (e.items) {
                var t = ["<div class='item-commands'>"];
                e.items.length || (e.items = [e.items]);
                for (var s = 0; s < e.items.length; s++) t.push("<span cmd='" + e.items[s].cmd + "'>"), t.push(e.items[s].name), t.push("</span>");
                t.push("</div>"), S(t.join(""))
            }
        }, map: function (e) {
            A.SetMapBuffer(e.map, e.path), A.ShowMap(e.map, e.path)
        }, dialog: function (e) {
            q.show(e.dialog, e)
        }, sc: function (e) {
            E.StatusChanged(e)
        }, perform: function (e) {
            E.ShowPFM(e)
        }, disobj: function (e) {
            E.DisObj(e)
        }, changepfm: function (e) {
            E.ChangeDistime(e)
        }, clearDistime: function (e) {
            E.ClearDistime(e)
        }, pay: function (e) {
        }, dispfm: function (e) {
            E.On_Perform(e)
        }, status: function (e) {
            E.StatusItemChanged(e)
        }, combat: function (e) {
            e.start && (1 != R.auto_showcombat || E.IsShow || E.Show(), 1 == R.auto_hideroom && (R.hide_roomdesc || $(".room_desc").hide())), e.end && 1 == R.auto_hideroom && (R.hide_roomdesc || $(".room_desc").show())
        }, state: function (e) {
            if (e && e.state) {
                var t = ["<span class='title'>" + e.state + "</span>"];
                if (e.commands) for (var s = 0; s < e.commands.length; s++) t.push("<span class='item-command' cmd='" + e.commands[s].cmd + "'>"), t.push(e.commands[s].name), t.push("</span>");
                $(".state-bar").removeClass("hide").html(t.join("")), e.no_stop ? $(".state-tool").hide() : $(".state-tool").show(), T.states = e.desc, T.timer && clearInterval(T.timer), T.states && T.states.length && ("string" == typeof T.states && (T.states = [T.states]), T.timer = setInterval(T.updatestate, e.interval || 5e3))
            } else $(".state-bar").addClass("hide").empty(), $(".state-tool").hide(), clearInterval(T.timer)
        }, updatestate: function () {
            if (T.states && i) {
                var e = T.states.length;
                S(T.states[parseInt(Math.random() * e)])
            }
        }, die: function (e) {
            if (e.relive) return T.state({});
            T.state({
                state: "<hiw>你已经死亡：</hiw>",
                no_stop: !0,
                desc: ["<blk>一股阴冷的气息包围着你。</blk>", "<blu>朦胧中你好像听到有人在喊：过来吧，过来吧！</blu>"],
                commands: e.commands,
                interval: 12e3
            })
        }, warn: function (e) {
            j.Show(e)
        }, msg: function (e) {
            var t = q.channel.createElement(e, !R.no_spmsg);
            if (t) if (R.no_spmsg) S(t); else {
                T.ChannelElement || (T.ChannelCount = 0, T.ChannelElement = $("<div class='channel'><pre></pre></div>").insertBefore(p), T.ChannelPro = T.ChannelElement.find("pre"), T.ChannelElement.on("click", q.channel.show.bind(q.channel)), T.ChannelElement.on("mousedown", q.channel.endScroll), T.ChannelElement.on("mouseup", q.channel.beginScroll));
                var s = q.channel.isBottom();
                1 == q.channel.datas.length && T.ChannelPro.empty(), T.ChannelPro.append(t), s && q.channel.scrollBottom()
            }
        }, addAction: function (e) {
            E.AddObj(e.id, e.name, e.distime)
        }, removeAction: function (e) {
            E.DisObj({id: e.id, count: 0})
        }
    }, j = {
        Elemes: [], Show: function (e) {
            var t = ["<div class='warn-dialog'>"];
            t.push("<div class='warn-content'>"), t.push(e.content), t.push("</div>"), t.push("<div class='item-commands'>");
            for (var s = 0; s < e.cmds.length; s++) {
                var i = e.cmds[s];
                t.push("<span cmd='"), t.push(i.cmd), t.push("'>"), t.push(i.name), t.push("</span>")
            }
            t.push("</div>");
            var n = $(t.join("")).appendTo(".bottom-bar");
            this.Elemes.push(n), window.setTimeout(this.Settop, 1);
            var o = this.Close.bind(this, n);
            e.time && window.setTimeout(o, e.time), n.on("click", "span", o)
        }, Close: function (e) {
            -1 < this.Elemes.indexOf(e) && (e.remove(), this.Elemes.Remove(e), this.Settop())
        }, Settop: function () {
            for (var e = 0, t = 0; t < j.Elemes.length; t++) {
                var s = j.Elemes[t];
                s.css("bottom", e), e += s.height() + 14
            }
        }
    }, E = {
        IsShow: !1, Actions: null, Skills: null, Show: function () {
            if (E.IsShow) return E.Hide();
            this.Actions || c("actions"), E.IsShow = !0, R.show_hp || $(".room-item>.item-status").show(), $(".combat-panel").removeClass("hide"), $(".right-bar")[0].style.bottom = "7em"
        }, Hide: function () {
            E.IsShow = !1, R.show_hp || $(".room-item>.item-status").hide(), $(".combat-panel").addClass("hide"), $(".right-bar")[0].style.bottom = null
        }, ShowRoomCommands: function (e) {
            if (this.RoomCommands) for (var t = 0; t < this.RoomCommands.length; t++) this.RoomCommands[t].elem && this.RoomCommands[t].elem.remove();
            this.RoomCommands = e, this.create_actions()
        }, ShowActions: function (e) {
            this.Actions = e.actions || [], this.create_actions(), e.skills && this.ShowPFM(e)
        }, ShowPFM: function (e) {
            this.Skills = e.skills || [], this.create_skillItems(e.skills)
        }, create_actions: function (e) {
            if (this.Actions) for (var t = this.Actions.concat(this.RoomCommands || []), s = $(".room-commands"), i = 0; i < t.length; i++) if (!t.elem) {
                var n = t[i], o = [];
                o.push("<span class='act-item' cmd='" + n.cmd + "'>"), o.push(n.name), n.distime && o.push("<span class='shadow'></span>"), o.push("</span>"), n.elem || (n.elem = $(o.join("")).appendTo(s))
            }
        }, DisObj: function (e) {
            if (this.Actions) for (var t = "use " + e.id, s = 0; s < this.Actions.length; s++) {
                var i = this.Actions[s];
                if (i.cmd == t) {
                    if (!e.count) return this.Actions.splice(s, 1), i.elem.remove();
                    this.ANI_OBJ(i.elem.find(".shadow").show()[0], e.time, 0)
                }
            }
        }, AddObj: function (e, t) {
            if (this.Actions) {
                for (var s = "use " + e, i = 0; i < this.Actions.length; i++) {
                    if (this.Actions[i].cmd == s) return
                }
                this.Actions.push({cmd: "use " + e, name: t.replace(/\<.+?\>/g, "")}), this.create_actions()
            }
        }, ANI_OBJ: function (e, t, s) {
            if (e) {
                var i = 100 * s / t;
                if (100 <= i) return e.style.display = "none";
                e.style.left = i + "%", setTimeout(E.ANI_OBJ, 1e3, e, t, s + 1e3)
            }
        }, create_skillItems: function (e) {
            var t = $(".combat-commands").empty();
            if (e.length) for (var s = 0; s < e.length; s++) {
                var i = [];
                i.push("<span class='pfm-item' pid='" + e[s].id + "'>"), i.push(e[s].name), i.push("<span class='shadow'></span>"), i.push("</span>"), e[s].shadow = $(i.join("")).appendTo(t).find(".shadow")[0]
            }
        }, ChangeDistime: function (e) {
            for (var t = e.id.replace("/", "."), s = 0; s < E.dis_pfms.length; s++) if (E.dis_pfms[s].id == t) {
                E.dis_pfms[s].ani_time += e.time;
                break
            }
        }, ClearDistime: function (e) {
            if (E.dis_pfms) for (var t = e.id ? e.id.replace("/", ".") : e.id, s = 0; s < E.dis_pfms.length; s++) {
                if (t && "all" != t && E.dis_pfms[s].id == t) {
                    E.dis_pfms[s].ani_time = 0;
                    break
                }
                E.dis_pfms[s].ani_time = 0
            }
        }, On_Perform: function (e) {
            if (this.Skills) {
                e.rtime = e.rtime || 0, e.distime = e.distime || 0, this.dis_pfms || (this.dis_pfms = []);
                for (var t = 0; t < this.dis_pfms.length; t++) this.dis_pfms[t].id != e.id ? this.dis_pfms[t].ani_time < e.rtime && (this.dis_pfms[t].ani_time = e.rtime, this.dis_pfms[t].distime = e.rtime) : (e.id = null, this.dis_pfms[t].distime = e.distime, this.dis_pfms[t].ani_time = e.distime);
                e.id && this.dis_pfms.push({
                    id: e.id,
                    distime: e.distime,
                    ani_time: e.distime
                }), E.ani_time = E.ani_time || 0, e.rtime > E.ani_time && (E.distime = e.rtime, E.ani_time = e.rtime), this.time_handler || E.ANI_PFM()
            }
        }, PFM_INTERVAL: 300, ANI_PFM: function () {
            for (var e = 100 * E.ani_time / E.distime, t = 0; t < E.Skills.length; t++) {
                for (var s = E.Skills[t], i = e, n = 0; n < E.dis_pfms.length; n++) if (E.dis_pfms[n].id == s.id && E.dis_pfms[n].distime) {
                    (i = 100 * E.dis_pfms[n].ani_time / E.dis_pfms[n].distime) < 0 ? E.dis_pfms.splice(n, 1) : E.dis_pfms[n].ani_time -= E.PFM_INTERVAL;
                    break
                }
                0 < i ? (s.shadow.style.left = 100 - i + "%", s.shadow.style.display = "block") : (s.shadow.style.display = "none", s.shadow.style.left = "0px")
            }
            0 < E.ani_time || E.dis_pfms.length ? E.time_handler = setTimeout(E.ANI_PFM, E.PFM_INTERVAL) : E.time_handler = null, E.ani_time -= E.PFM_INTERVAL
        }, StatusChanged: function (e) {
            for (var t = $(".room-item"), s = 0; s < t.length; s++) {
                var i = $(t[s]);
                if (i.attr("itemid") == e.id) {
                    this.UpdaeBar(e, "mp", i), this.UpdaeBar(e, "hp", i);
                    break
                }
            }
        }, UpdaeBar: function (e, t, s) {
            var i = e[t], n = 0;
            if (null != i) {
                var o = s.find("." + t + ">.progress-bar");
                e["max_" + t] ? (n = e["max_" + t], o.attr("max", n)) : n = parseInt(o.attr("max")), o.css("width", E.CountWidth(i, n) + "%")
            }
        }, CountWidth: function (e, t) {
            if (0 == t) return 0;
            var s = 100 * e / t;
            return 100 <= s ? 100 : s < 0 ? 0 : s
        }, Perform: function () {
            var e = $(this);
            if (!e.is("disable")) {
                var t = e.attr("pid");
                t && c("perform " + t)
            }
        }, STATUS: {}, AppendStatusItem: function (e, t, s) {
            var i = {elem: t, items: {}};
            if (s) for (var n = 0; n < s.length; n++) this.StatusItem_add(i, s[n]);
            this.STATUS[e] = i
        }, StatusItemChanged: function (e) {
            var t = E["StatusItem_" + e.action];
            t && t.call(E, this.STATUS[e.id], e)
        }, StatusItem_add: function (e, t) {
            if (e) {
                var s = [];
                s.push('<span class="status-item'), t.downside && s.push(" downside"), s.push('" sid="'), s.push(t.sid), s.push('">'), s.push(t.name), null != t.count && (s.push("x"), s.push(t.count)), s.push('<span class="shadow"></span></span>'), e.items[t.sid] = {
                    elem: $(s.join("")).appendTo(e.elem)[0],
                    name: t.name,
                    count: t.count,
                    duration: t.duration,
                    anitime: t.duration - (t.overtime || 0)
                }, 0 < t.duration && E.StatusItemANI(e.items[t.sid])
            }
        }, StatusItem_remove: function (e, t) {
            if (e) {
                var s = t.sid;
                "string" == typeof s && (s = [s]);
                for (var i = 0; i < s.length; i++) {
                    var n = e.items[s[i]];
                    n && ($(n.elem).remove(), n.handler && clearTimeout(n.handler), delete e.items[s[i]])
                }
            }
        }, StatusItem_refresh: function (e, t) {
            if (e) {
                var s = e.items[t.sid];
                if (s) {
                    s.elem.firstChild;
                    var i = s.elem.lastChild;
                    s.count = t.count, s.elem.innerHTML = s.name + "x" + s.count + i.outerHTML, s.handler && clearTimeout(s.handler), s.anitime = s.duration, E.StatusItemANI(s)
                }
            }
        }, StatusItem_override: function (e, t) {
            var s = e.items[t.sid];
            s && (s.handler && clearTimeout(s.handler), s.anitime = s.duration, E.StatusItemANI(s))
        }, StatusItem_clear: function (e, t) {
            if (e) {
                for (var s in e.items) {
                    var i = e.items[s];
                    i && ($(i.elem).remove(), clearTimeout(i.handler))
                }
                e.items = {}
            }
        }, StatusItemANI: function (e) {
            var t = e.elem.lastChild, s = 100 * e.anitime / e.duration;
            s < 0 && (s = 0), t.style.right = s + "%", e.anitime = e.anitime - 1e3, e.handler = 0 < s ? setTimeout(E.StatusItemANI, 1e3, e) : 0
        }
    };
    var A = {
        DIRS: ["west", "north", "south", "east", "northwest", "southwest", "northeast", "southeast", "down", "up", "westdown", "northdown", "southdown", "eastdown", "westup", "northup", "southup", "eastup", "enter", "out"],
        CreateExitsMap: function (e, t, s) {
            var i = s.split("-");
            1 < i.length && (s = i[i.length - 1]), s = s.replace(/\(.*?\)/, "");
            var n = 40, o = (t - 60) / 2, a = 10, l = {};
            for (var h in e.north && e.up && (e.north_2 = e.up, delete e.up), e.south && e.down && (e.south_2 = e.down, delete e.down), e) -1 < h.indexOf("south") || "down" == h || "out" == h ? l.s = !0 : (-1 < h.indexOf("north") || "up" == h || "enter" == h) && (l.n = !0);
            l.s && (n += 30), l.n && (n += 30, a += 30);
            var r = [];
            for (var h in r.push('<svg style="margin-left:-2em" height="' + n + '" width="' + t + '">'), r.push('<rect x="' + o + '" y="' + a + '"  fill="dimgrey" stroke-width="1" stroke="gray" '), r.push('width="60" height="20"></rect>'), r.push(' <text x="' + (o + 30) + '" y="' + (a + 14) + '" fill="#232323" text-anchor="middle" style="font-size:12px;">' + s + "</text>"), e) {
                var c, m, d;
                switch (h) {
                    case"west":
                    case"westup":
                    case"westdown":
                        c = [o - 10, a + 10], m = [o, a + 10], d = [o - 70, a];
                        break;
                    case"east":
                    case"eastup":
                    case"eastdown":
                        c = [o + 60, a + 10], m = [o + 70, a + 10], d = [o + 70, a];
                        break;
                    case"south":
                    case"southup":
                    case"southdown":
                    case"down":
                        c = [o + 30, a + 20], m = [o + 30, a + 30], d = [o, a + 30];
                        break;
                    case"north":
                    case"northup":
                    case"northdown":
                    case"up":
                        c = [o + 30, a], m = [o + 30, a - 10], d = [o, a - 30];
                        break;
                    case"northwest":
                        c = [o - 70 + 60, a - 30 + 20], m = [o, a], d = [o - 70, a - 30];
                        break;
                    case"northeast":
                    case"north_2":
                    case"enter":
                        c = [o + 70, a - 30 + 20], m = [o + 60, a], d = [o + 70, a - 30];
                        break;
                    case"southeast":
                    case"south_2":
                        c = [o + 70, a + 30], m = [o + 60, a + 20], d = [o + 70, a + 30];
                        break;
                    case"southwest":
                    case"out":
                        c = [o - 70 + 60, a + 30], m = [o, a + 20], d = [o - 70, a + 30]
                }
                var u = e[h];
                "south_2" == h ? h = "down" : "north_2" == h && (h = "up"), r.push('<rect x="' + d[0] + '" y="' + d[1] + '" dir="' + h + '" fill="#232323" stroke-width="1" stroke="gray" '), r.push('width="60" height="20"></rect>'), r.push(' <text x="' + (d[0] + 30) + '" y="' + (d[1] + 14) + '" dir="' + h + '" fill="dimgrey" text-anchor="middle" style="font-size:12px;">' + u + "</text>"), c && (r.push('<line  stroke="gray" '), r.push(" x1='" + c[0] + "' y1='" + c[1] + "' x2='" + m[0] + "' y2='" + m[1] + "'"), -1 < h.indexOf("up") || -1 < h.indexOf("down") ? (r.push(" stroke-dasharray='5,5'"), r.push(" stroke-width='10'")) : r.push(" stroke-width='1'"), r.push("></line >"))
            }
            return r.push("</svg>"), r.join("")
        },
        ShowMap: function (e, t) {
            if (e) {
                this.CurMapID = t;
                var s = [], i = A.getMinPos(e), n = 0 - i.minX, o = 0 - i.minY, a = 100,
                    l = /^([a-z]{1,2})(\d)?([d|l])?$/, h = $(".map-panel");
                A.MapWidth = (i.maxX + n + 1) * a;
                var r = 0, c = h.width();
                if (A.MapWidth < c && (r = (c - A.MapWidth) / 2, A.MapWidth = c), A.MapHeight = 50 * (i.maxY + o + 1), !(A.MapWidth < 0 || A.MapHeight < 0)) {
                    s.push('<svg class="map" height="' + A.MapHeight + '" width="' + A.MapWidth + '">');
                    for (var m = 0; m < e.length; m++) {
                        s.push("<rect class='map-room' rm='" + e[m].id + "' ");
                        var d = (e[m].p[0] + n) * a + r + 20, u = 50 * (e[m].p[1] + o) + 20;
                        s.push("x='" + d + "' y='" + u + "'"), s.push(' fill="dimgrey" stroke-width="1" stroke="gray" '), s.push('width="60" height="20"></rect>');
                        var p = e[m].exits;
                        if (p) for (var f = 0; f < p.length; f++) {
                            l.test(p[f]);
                            var v, _, g = RegExp.$2 ? parseInt(RegExp.$2) : 1;
                            switch (RegExp.$1) {
                                case"w":
                                    v = [d - 40 - a * (g - 1), u + 10], _ = [d, u + 10];
                                    break;
                                case"e":
                                    v = [d + 60, u + 10], _ = [d + a + a * (g - 1), u + 10];
                                    break;
                                case"s":
                                    v = [d + 30, u + 20], _ = [d + 30, u + 50 + 50 * (g - 1)];
                                    break;
                                case"n":
                                    v = [d + 30, u], _ = [d + 30, u - 30 - 50 * (g - 1)];
                                    break;
                                case"nw":
                                    v = [d - g * a + 60, u - 50 * g + 20], _ = [d, u];
                                    break;
                                case"ne":
                                    v = [d + 60, u], _ = [d + g * a, u - 30];
                                    break;
                                case"se":
                                    v = [d + 60, u + 20], _ = [d + g * a, u + 50 * g];
                                    break;
                                case"sw":
                                    v = [d, u + 20], _ = [d - 40 - a * (g - 1), u + 50 * g]
                            }
                            v && (s.push('<line  stroke="gray" '), s.push(" x1='" + v[0] + "' y1='" + v[1] + "' x2='" + _[0] + "' y2='" + _[1] + "'"), RegExp.$3 && s.push(" stroke-dasharray='5,5'"), "l" == RegExp.$3 ? s.push(" stroke-width='10'") : s.push(" stroke-width='1'"), s.push("></line >"))
                        }
                        s.push(' <text x="' + (d + 30) + '" y="' + (u + 14) + '" fill="#232323" text-anchor="middle" style="font-size:12px;">' + e[m].n + "</text>")
                    }
                    s.push("</svg>"), h.html(s.join("")), this.MapContent = $("svg"), this.IsShow || (this.IsShow = !0, $(".map-panel").slideDown("fast")), this.SetRoom(this.Room)
                }
            }
        },
        getMinPos: function (e) {
            for (var t = {minX: 99999, minY: 99999, maxX: 0, maxY: 0}, s = 0; s < e.length; s++) {
                var i = e[s].p[0], n = e[s].p[1];
                i < t.minX && (t.minX = i), i > t.maxX && (t.maxX = i), n < t.minY && (t.minY = n), n > t.maxY && (t.maxY = n)
            }
            return t
        },
        State: 0,
        ZoomState: 100,
        Buffer: {},
        HideItem: function () {
            0 == this.State && (this.State = 1, $(".room_desc").slideUp("fast"))
        },
        ShowItem: function () {
            1 == this.State && (this.State = 0, $(".room_desc").slideDown("fast"))
        },
        ZoomIn: function (e) {
            if (!e.zoom) {
                A.ZoomState = A.ZoomState / e.zoom, 200 < A.ZoomState && (A.ZoomState = 200), A.ZoomState < 80 && (A.ZoomState = 80);
                var t = A.MapWidth * A.ZoomState / 100, s = A.MapHeight * A.ZoomState / 100;
                this.MapContent.attr("viewBox", "0,0," + t + "," + s)
            }
        },
        SetRoom: function (e) {
            if (this.Room = e, this.IsShow) {
                this.CurRoomItem && (this.CurRoomItem.attr("fill", "dimgrey"), this.CurRoomItem.attr("stroke", "gray")), this.CurRoomItem = null;
                var t = this.MapContent.find("rect[rm='" + e.path + "']");
                if (t.length) {
                    this.CurRoomItem = t, this.CurRoomItem.attr("fill", "#bebebe"), this.CurRoomItem.attr("stroke", "gray");
                    var s = [t.attr("x"), t.attr("y"), t.attr("width"), t.attr("height")],
                        i = document.querySelector(".map-panel"), n = i.offsetHeight, o = i.offsetWidth;
                    i.scrollTop = s[1] - (n - s[3]) / 2, i.scrollLeft = s[0] - (o - s[2]) / 2
                }
                var a = e.path.substr(0, e.path.lastIndexOf("/"));
                if (a != this.CurMapID) {
                    if (A.Buffer[a]) return A.ShowMap(A.Buffer[a], a);
                    c("map " + a)
                }
            }
        },
        LoadMap: function () {
            if (this.IsShow) return this.IsShow = !1, $(".map-panel").slideUp("fast");
            var e = A.Room;
            if (e) {
                var t = e.path.substr(0, e.path.lastIndexOf("/"));
                return t == this.CurMapID ? ($(".map-panel").slideDown("fast"), void(this.IsShow = !0)) : A.Buffer[t] ? A.ShowMap(A.Buffer[t], t) : void c("map " + t)
            }
        },
        SetMapBuffer: function (e, t) {
            A.Buffer[t] = e
        }
    }, q = {
        isShow: !1,
        curItem: null,
        show: function (e, t) {
            if (e) if (t) this[e].onData(t); else {
                if (this.isShow && e == this.curItem) return this.hide();
                this.curItem && e != this.curItem && (q[q.curItem].close && q[q.curItem].close(), q[q.curItem].isShow = !1, q.contentElement.empty()), this.init(), this.curItem = e, this[e].show(t)
            }
        },
        select: function (e) {
            if (this.isShow && e == this.curItem) return this.hide();
            this.curItem && e != this.curItem && (q[q.curItem].close && q[q.curItem].close(), q[q.curItem].isShow = !1, q.contentElement.empty()), this.init(), this.curItem = e
        },
        init: function () {
            this.isShow || (this.isInit || (this.contentElement = $(".dialog>.dialog-content"), this.titleElement = $(".dialog>.dialog-header>.dialog-title"), this.iconElement = $(".dialog>.dialog-header>.dialog-icon"), this.footerElement = $(".dialog>.dialog-footer").on("click", ".footer-item", q.footerClick), this.hiddenElement = $(".hidden-item"), this.element = $(".dialog"), $(".dialog>.dialog-header>.dialog-close").on("click", q.hide), this.isInit = !0), $(".content-room").addClass("hide"), this.element.removeClass("hide"), this.isShow = !0)
        },
        hide: function () {
            q[q.curItem].hide && 0 == q[q.curItem].hide() || (q.isShow = !1, $(".content-room").removeClass("hide"), q.element.addClass("hide"))
        },
        footerClick: function () {
            var e = $(this);
            if (!e.is(".select")) {
                var t = e.attr("for");
                e.parent().find(".select").removeClass("select"), e.addClass("select"), q[q.curItem].footerChanged(t)
            }
        },
        title: function (e) {
            q.titleElement.html(e)
        },
        icon: function (e) {
            this.iconElement.attr("class", "dialog-icon glyphicon glyphicon-" + e)
        },
        footer: function (e) {
            e ? this.footerElement.html(e) : this.footerElement.empty()
        },
        score: {
            footer: [["属性", ".dialog-score"], ["详细", ".dialog-score2"], ["称号", ".dialog-titles"]],
            selectIndex: 0,
            onData: function (e) {
                if (console.log(e), this.data = e, this.init_elem(), q.titleElement.html(e.name), q.icon("user"), e.titles) this.titles = e.titles, this.create_titles(); else {
                    e.id && e.id != this.uid && (this.uid = e.id, this.uid != T.player ? q.footerElement.find(".footer-item:eq(2)").hide() : q.footerElement.find(".footer-item:eq(2)").show());
                    for (var t = $(e.name ? this.footer[0][1] : this.footer[1][1]).find("span"), s = 0; s < t.length; s++) {
                        var i = $(t[s]), n = i.attr("data-prop");
                        n && i.html(e[n] || 0)
                    }
                }
            },
            init_elem: function () {
                if (q.init(), q.curItem = "score", !this.isShow) {
                    q.footer("");
                    for (var e = 0; e < this.footer.length; e++) {
                        $("<span class='footer-item " + (this.selectIndex == e ? "select" : "") + "' for='" + e + "'>" + this.footer[e][0] + "</span>").appendTo(q.footerElement);
                        this.footer[e][1] = $(this.footer[e][1])
                    }
                    this.isShow = !0, this.footerChanged(this.selectIndex)
                }
            },
            show: function (e) {
                e || (this.selectIndex ? 1 == this.selectIndex ? c("score2") : c("score title") : c("score"), this.init_elem())
            },
            close: function () {
                this.footer[this.selectIndex][1].remove(), q.footer(""), this.isShow = !1
            },
            footerChanged: function (e) {
                this.data;
                e = parseInt(e), this.footer[this.selectIndex][1].remove(), this.selectIndex = e;
                var t = $(this.footer[this.selectIndex][1]).appendTo(q.contentElement.empty());
                1 == e ? this.uid && T.player != this.uid ? c("score2 " + this.uid) : c("score2") : 2 != e || this.titles || (c("score title"), t.on("click", ".btn-noused", function (e) {
                    for (var t = parseInt($(e.target).attr("index")), s = 0; s < this.titles.length; s++) this.titles[s].use = s == t;
                    c("title " + t), this.create_titles()
                }.bind(this)))
            },
            create_titles: function () {
                for (var e = $(".dialog-titles"), t = [], s = 0; s < this.titles.length; s++) t.push("<div class='title-item'>"), t.push(this.titles[s].title), this.titles[s].use || (t.push("<span class='btn-noused' index='"), t.push(s), t.push("'>"), t.push("使用"), t.push("</span>")), t.push("</div>");
                e.html(t.length ? t.join("") : "<div class='empty'>你还没有获得任何称号</div>")
            }
        },
        map: {
            onData: function (e) {
                q.title(e.title || "地图")
            }, show: function () {
                q.init(), q.footer(""), q.contentElement.append($(".map")), q.icon("map-marker"), q.iconElement.attr("class", "dialog-icon glyphicon glyphicon-map-marker")
            }, hide: function () {
                $(".map").appendTo(".map-panel")
            }, close: function () {
                this.hide()
            }
        }
    };

    function M(e) {
        if (!e) return "";
        var t = [];
        return 1e4 <= e && (t.push(parseInt(e / 1e4) + "两<hiy>黄金</hiy>"), e %= 1e4), 100 < e && (t.push(parseInt(e / 100) + "两<wht>白银</wht>"), e %= 100), 0 < e && t.push(e + "个<yel>铜板</yel>"), t.join("")
    }

    q.skills = {
        isShow: !1,
        selectItem: ".dialog-skills",
        hide: function () {
            if (this.skill_element) return this.skill_element.remove(), this.skill_element = null, this.element.removeClass("hide-item"), !1
        },
        close: function () {
            this.hide(), this.element.remove(), this.isShow = !1
        },
        level_desc: ["wht", "nor", "hic", "HIJ", "HIZ", "hio"],
        limit: 0,
        selected_item: 0,
        showdesc: function (e) {
            this.skill_element = $("<pre></pre>").html(e.desc).appendTo(this.element), this.element.addClass("hide-item")
        },
        footerChanged: function (e) {
            e != this.selected_item && (0 == (this.selected_item = e) ? this.element.removeClass("spskill") : this.element.addClass("spskill"))
        },
        create_footer: function () {
            for (var e = ["基础", "特殊"], t = [], s = 0; s < e.length; s++) t.push("<span class='footer-item" + (s == this.selected_item ? " select" : "") + "' for='" + s + "''>" + e[s] + "</span>");
            t.push("<span class='obj-money'>你目前的技能上限为<HIC>" + this.limit + "</HIC>级</span>"), q.footer(t.join(""))
        },
        updateSkill: function (e) {
            if (this.skills) {
                var t = this.skills[e.id];
                if (!t) return this.addSkill(t);
                if (e.enable) {
                    if (t.enable_skill) {
                        var s = t.enable_skill;
                        t.enable_skill = null, this.skills[s][e.id], this.updateSkillItem(this.skills[s])
                    }
                    this.skills[e.enable][e.id] = !0, t.enable_skill = e.enable, this.updateSkillItem(this.skills[e.enable]), this.updateSkillItem(this.skills[e.id])
                } else if (null != e.exp || null != e.level) e.level && (t.level = e.level), e.exp && (t.exp = e.exp), this.updateSkillItem(t); else if (0 == e.enable && t.enable_skill) {
                    s = t.enable_skill;
                    this.skills[s][e.id], t.enable_skill = null, this.updateSkillItem(this.skills[s]), this.updateSkillItem(this.skills[e.id])
                }
            }
        },
        updateSkillItem: function (e) {
            var t = this.element.find(".skill-item[skid='" + e.id + "']");
            t && t.replaceWith(this.createSkillItem(e))
        },
        addSkill: function (e) {
            this.items && e && (this.items.push(e), this.skills[e.id] = e, this.element.append(this.createSkillItem(e)))
        },
        onData: function (e) {
            if (e) {
                if (!this.isShow && q.master.isShow && null == e.exp && !e.item) return q.master.onData(e);
                if (e.item) return this.addSkill(e.item);
                if (e.id) return this.updateSkill(e);
                if (e.desc) return this.showdesc(e);
                if (e.remove && this.items) {
                    this.items.Remove(this.skills[e.remove]);
                    this.skills[e.remove];
                    for (var t = 0; t < this.items.length; t++) this.items[t].enable_skill == e.remove && (this.items[t].enable_skill = null);
                    return delete this.skills[e.remove], this.createSkillItems(this.items)
                }
                if (e.items) {
                    this.title = e.title, q.title(this.title), q.icon("book"), this.items = e.items, this.skills = {};
                    for (t = 0; t < this.items.length; t++) {
                        var s = this.items[t];
                        this.skills[s.id] = s
                    }
                    this.createSkillItems(this.items)
                }
                e.limit && (this.limit = e.limit, this.create_footer())
            }
        },
        show: function () {
            this.isShow || (this.isShow = !0, this.element || (this.element = $('<div class="dialog-skills"></div >')), this.element.on("click", ".skill-item", q.skills.item_click), this.element.appendTo(q.contentElement), this.element.removeClass("hide-item"), this.items ? (c("cha none"), q.title(this.title), q.icon("book"), this.create_footer()) : c("cha"))
        },
        isEnable: function (e, t) {
            if (!e.can_enables) return !1;
            for (var s = 0; s < e.can_enables.length; s++) {
                var i = t[e.can_enables[s]];
                if (i && i.enable_skill == e.id) return !0
            }
            return !1
        },
        createSkillItem: function (e, t) {
            t = t || this.skills;
            var s = [];
            s.push(' <div class="skill-item'), this.master || (e.can_enables ? s.push(" skill") : s.push(" base"));
            var i = this.isEnable(e, t);
            if (i && s.push(" enable"), s.push('" skid="' + e.id + '">'), i ? s.push(e.name.replace(">", ">✔")) : s.push(e.name), e.enable_skill && t) {
                var n = t[e.enable_skill];
                n && (s.push('<span class="enable_skill">已装备：'), s.push(n.name), s.push("</span>"))
            }
            return s.push('<span class="skill-level">'), s.push(e.level), s.push("级 / "), s.push(e.exp), s.push("%"), s.push("&nbsp;"), s.push(q.skills.get_lvdesc(e.level)), s.push("</span></div>"), s.join("")
        },
        createSkillItems: function (e, t) {
            for (var s = [], i = 0; i < e.length; i++) s.push(this.createSkillItem(e[i], t));
            this.element.html(s.join(""))
        },
        level_color: ["wht", "hig", "hic", "hij", "hiz", "hio"],
        get_lvdesc: function (e) {
            if (e < 1e3) return q.skills.skill_levels[parseInt(e / 50)];
            var t = parseInt((e - 1e3) / 500);
            return 6 < t && (t = 6), q.skills.skill_levels[t + 20]
        },
        skill_levels: ["<BLU>初学乍练</BLU>", "<BLU>不知所以</BLU>", "<HIB>粗通皮毛</HIB>", "<HIB>渐有所悟</HIB>", "<YEL>半生不熟</YEL>", "<YEL>马马虎虎</YEL>", "<HIY>平淡无奇</HIY>", "<HIY>触类旁通</HIY>", "<HIG>心领神会</HIG>", "<HIG>挥洒自如</HIG>", "<HIC>驾轻就熟</HIC>", "<HIC>出类拔萃</HIC>", "<CYN>初入佳境</CYN>", "<CYN>神乎其技</CYN>", "<MAG>威不可当</MAG>", "<HIW>豁然贯通</HIW>", "<HIW>超群绝伦</HIW>", "<RED>登峰造极</RED>", "<WHT>登堂入室</WHT>", "<HIM>一代宗师</HIM>", "<WHT>超凡入圣</WHT>", "<HIO>出神入化</HIO>", "<HIO>独步天下</HIO>", "<HIR>空前绝后</HIR>", "<HIR>旷古绝伦</HIR>", "<HIW>深不可测</HIW>", "<HIW>返璞归真</HIW>"],
        item_click: function () {
            var e = $(this), t = ["<div class='item-commands'>"], s = q.skills.skills[e.attr("skid")];
            if (s) {
                if (t.push('<span cmd="checkskill ' + s.id + '">查看详细</span>'), s.can_enables) for (var i = 0; i < s.can_enables.length; i++) {
                    var n = q.skills.skills[s.can_enables[i]];
                    n && (n.enable_skill != s.id ? t.push('<span cmd="enable ' + n.id + " " + s.id + '">装备' + n.name + "</span>") : t.push('<span cmd="enable ' + n.id + ' none">取消装备' + n.name + "</span>"))
                }
                if (s.enable_skill) {
                    var o = q.skills.skills[s.enable_skill];
                    o ? t.push('<span cmd="enable ' + s.id + ' none">取消装备' + o.name + "</span>") : s.enable_skill = null
                }
                t.push('<span cmd="_confirm fangqi ' + s.id + '">遗忘</span>'), t.push('<span cmd="lianxi ' + s.id + '">练习</span>'), t.push("</div>"), q.skills.element.find(".item-commands").remove(), $(t.join("")).appendTo(e)
            }
        }
    }, q.master = {
        isShow: !1,
        hide: function () {
            if (this.skill_element) return this.skill_element.remove(), this.skill_element = null, this.element.removeClass("hide-item"), !1;
            this.isShow = !1
        },
        close: q.skills.close,
        createSkillItems: q.skills.createSkillItems,
        createSkillItem: q.skills.createSkillItem,
        updateSkill: q.skills.updateSkill,
        updateSkillItem: q.skills.updateSkillItem,
        showdesc: q.skills.showdesc,
        isEnable: q.skills.isEnable,
        onData: function (e) {
            if (e.desc) return this.showdesc(e);
            if (e.id) return this.updateSkill(e);
            if (e.remove) {
                this.items.Remove(this.skills[e.remove]);
                this.skills[e.remove];
                for (var t = 0; t < this.items.length; t++) this.items[t].enable_skill == e.remove && (this.items[t].enable_skill = null);
                return delete this.skills[e.remove], this.createSkillItems(this.items)
            }
            if (e.master || e.follower) {
                q.show("master"), this.master = e.master || e.follower, this.is_follower = !!e.follower;
                var s = {};
                for (t = 0; t < e.items.length; t++) {
                    var i = e.items[t];
                    s[i.id] = i
                }
                this.skills = s, this.items = e.items, q.title(e.title), q.icon("book"), this.createSkillItems(e.items, s), e.limit && (this.is_follower ? q.footer("<span class='obj-money'>" + e.target + "目前的技能上限为<HIC>" + e.limit + "</HIC>级</span>") : q.footer("<span class='obj-money'>你目前的技能上限为<HIC>" + e.limit + "</HIC>级</span>"))
            }
        },
        show: function () {
            this.isShow || (this.element || (this.element = $('<div class="dialog-skills"></div >')), this.element.on("click", ".skill-item", this.item_click), this.element.appendTo(q.contentElement), this.element.removeClass("hide-item"), this.isShow = !0)
        },
        item_click: function () {
            var e = $(this), t = q.master.skills[e.attr("skid")];
            if (t) {
                var s = ["<div class='item-commands'>"];
                if (s.push('<span cmd="checkskill ' + t.id + " " + q.master.master + '">查看详细</span>'), s.push('<span cmd="xue ' + e.attr("skid") + " from " + q.master.master + '">学习</span>'), q.master.is_follower) {
                    var i = "dc " + q.master.master;
                    if (s.push('<span cmd="_confirm ' + i + " fangqi " + e.attr("skid") + '">遗忘</span>'), s.push('<span cmd="' + i + " lianxi " + e.attr("skid") + '">练习</span>'), t.can_enables) for (var n = 0; n < t.can_enables.length; n++) {
                        var o = q.master.skills[t.can_enables[n]];
                        o && (o.enable_skill != t.id ? s.push('<span cmd="' + i + " enable " + o.id + " " + t.id + '">装备' + o.name + "</span>") : s.push('<span cmd="' + i + " enable " + o.id + ' none">取消装备' + o.name + "</span>"))
                    }
                    if (t.enable_skill) {
                        var a = q.master.skills[t.enable_skill];
                        a ? s.push('<span cmd="' + i + " enable " + t.id + ' none">取消装备' + a.name + "</span>") : t.enable_skill = null
                    }
                }
                s.push("</div>"), q.master.element.find(".item-commands").remove(), $(s.join("")).appendTo(e)
            }
        }
    }, q.pack = {
        close: q.skills.close, hide: q.skills.hide, command_before: "", updateitem: function (e) {
            if (this.items) {
                if (null != e.money && (this.money = e.money, this.show_moeny()), null != e.eq) {
                    for (var t = 0; t < this.items.length; t++) if (this.items[t].id == e.id) {
                        this.eqs[e.eq] = this.items[t], this.items.splice(t, 1);
                        break
                    }
                    return !0
                }
                var s;
                if (null != e.uneq) return (s = this.eqs[e.uneq]).can_eq = 1, s.count = 1, this.items.push(s), !(this.eqs[e.uneq] = null);
                if (e.jldesc) return (n = []).push(e.jldesc), n.push("<span class='item-commands'>"), n.push('<span cmd="' + this.command_before + "jinglian " + e.id + ' ok">精炼</span>'), n.push("</span>"), this.show_sub(n.join("")), !1;
                if (e.xqdesc) {
                    (n = []).push(e.xqdesc), n.push("<span class='item-commands'>");
                    for (t = 0; t < e.stones.length; t++) {
                        var i = e.stones[t];
                        n.push('<span cmd="' + this.command_before + "xiangqian " + e.id + " " + i.id + '">镶嵌' + i.name + "</span><br/>")
                    }
                    return n.push("</span>"), this.show_sub(n.join("")), !1
                }
                if (e.desc) {
                    var n;
                    (n = []).push(e.desc), n.push("<span class='item-commands'>");
                    var o = e.from;
                    if ("eq" == o) n.push('<span cmd="' + this.command_before + "uneq " + e.id + '">取消装备</span>'); else if ("item" == o) {
                        var a = this.get_item(e.id);
                        a && this.create_item_command(a, n, e.commands)
                    } else "store" == o ? n.push('<span cmd="_confirm qu ' + e.id + '">取出</span>') : n.push('<span cmd="_confirm buy ' + e.id + " from " + q.list.seller + '">购买</span>');
                    return n.push("</span>"), this.show_sub(n.join("")), !1
                }
                if (e.remove) {
                    var l = this.items;
                    for (t = 0; t < l.length; t++) if (l[t].id == e.id) {
                        e.remove >= l[t].count ? l.splice(t, 1) : l[t].count -= e.remove;
                        break
                    }
                    return !0
                }
                return e.name ? ((s = this.get_item(e.id)) ? (s.count = e.count, s.name = e.name) : this.items.push(e), !0) : !!e.max_item_count && (this.max_count = e.max_item_count, S((q.pack2.isShow ? q.pack2.target_name : "你") + "的背包容量扩充为" + this.max_count + "。"), !0)
            }
        }, get_item: function (e, t) {
            if (t = t || this.items) for (var s = 0; s < t.length; s++) if (t[s] && t[s].id == e) return t[s]
        }, show_sub: function (e) {
            this.objelement && this.objelement.remove();
            var t = this.packElement;
            q.list.isShow && (t = q.list.rightElement), this.objelement = $("<pre class='obj-desc'>" + e + "</pre>").appendTo(t.parent()).on("click", function () {
                this.objelement.remove(), this.objelement = null, t.show()
            }.bind(this)), t.hide()
        }, onData: function (e) {
            if (e) {
                if (e.items) this.eqs = e.eqs || [], this.money = e.money, this.items = e.items, this.max_count = e.max_item_count; else {
                    if (q.pack2.isShow && !e.name) return q.pack2.onData(e);
                    if (0 == this.updateitem(e)) return
                }
                this.isShow ? (this.show_items(), this.show_moeny()) : (q.list.isShow && q.list.update_pack(e), q.trade.isShow && q.trade.update_pack(e))
            }
        }, show_moeny: function () {
            this.isShow && (this.money ? q.footer("<div class='obj-money'>" + M(this.money)) : q.footer("<div class='obj-money'>" + (this.target_name || "你") + "身上没有任何银两</div>"))
        }, show_items: function () {
            this.createItems(), this.create_eqs(), q.icon("briefcase");
            var e = this.target_name || "你";
            q.title(this.items.length ? e + "身上共有" + this.items.length + "/" + this.max_count + "件物品" : e + "身上没有任何东西")
        }, init_element: function () {
            this.element || (this.element = $('<div class="dialog-pack"><div class="eq-list"><div class="eq-item"><span class="eq-type">武器</span><span class="eq-name"></span></div><div class="eq-item"><span class="eq-type">衣服</span><span class="eq-name"></span></div > <div class="eq-item"><span class="eq-type">鞋</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">头部</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">披风</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">戒指</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">项链</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">饰品</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">护腕</span><span class="eq-name"></span></div><div class="eq-item"><span class="eq-type">腰带</span><span class="eq-name"></span></div><div class="eq-item"><span class="eq-type">暗器</span><span class="eq-name"></span></div></div><div class="obj-list"></div></div>'), this.packElement = this.element.find(".obj-list"), this.eqElement = this.element.find(".eq-list"))
        }, show: function () {
            if (q.isShow || q.show(), this.objelement && (this.objelement.remove(), this.objelement = null, this.packElement && this.packElement.show()), this.isShow) return c(this.items ? "pack none" : "pack");
            this.isShow = !0, this.init_element(), this.packElement.on("click", ".obj-item", q.pack.item_click), this.eqElement.on("click", ".eq-item", q.pack.eqitem_click), this.element.appendTo(q.contentElement), this.items ? (c("pack none"), this.show_items()) : c("pack")
        }, create_eqs: function () {
            for (var e = this.eqElement.find(".eq-item>.eq-name"), t = 0; t < e.length; t++) {
                var s = this.eqs[t];
                $(e[t]).attr("oindex", t), s ? $(e[t]).html(s.name) : $(e[t]).html("")
            }
        }, createItems: function () {
            if (this.items) {
                for (var e = [], t = 0; t < this.max_count; t++) {
                    var s = this.items[t];
                    e.push('<div class="obj-item" oindex="'), e.push(t), e.push('">'), s && (e.push(s.name), 1 == this.show_type ? (e.push("<span class='obj-value'>"), e.push("每"), e.push(s.unit), e.push(M(s.value)), e.push("："), e.push(s.count), e.push(s.unit), e.push("</span>")) : 1 < s.count && (e.push("<span class='obj-value'>"), e.push(s.count), e.push(s.unit), e.push("</span>"))), e.push("</div>")
                }
                this.packElement.html(e.join(""))
            }
        }, create_item_command: function (e, t, s) {
            if (t.push('<span cmd="_confirm ' + this.command_before + "drop " + e.count + " " + e.id + '">丢掉</span>'), e.can_eq && (t.push('<span cmd="' + this.command_before + "eq " + e.id + '">装备</span>'), this.command_before || (t.push('<span cmd="jinglian ' + e.id + '">精炼</span>'), t.push('<span cmd="xiangqian ' + e.id + '">镶嵌</span>'), t.push('<span cmd="shortcut ' + e.id + '">设置快速装备</span>')), t.push('<span cmd="_confirm ' + this.command_before + "fenjie " + e.id + '">分解</span>')), e.can_use && t.push('<span cmd="' + this.command_before + "use " + e.id + '">使用</span>'), e.can_open && t.push('<span cmd="' + this.command_before + "open " + e.id + '">打开</span>'), e.can_study && t.push('<span cmd="' + this.command_before + "study " + e.id + '">学习</span>'), e.can_combine && e.count >= e.can_combine && t.push('<span cmd="_confirm ' + this.command_before + "combine " + e.id + " " + e.can_combine + '">合成</span>'), this.command_before && t.push('<span cmd="_confirm ' + this.command_before + "give " + T.player + " " + e.count + " " + e.id + '">拿来</span>'), s) for (var i = 0; i < s.length; i++) t.push('<span cmd="packitem ' + s[i].cmd + " " + e.id + '">' + s[i].name + "</span>")
        }, item_click: function () {
            var e = $(this), t = e.attr("oindex"), s = q.pack.items[t];
            if (q.pack.element.find(".item-commands").remove(), s) {
                var i = ["<span class='item-commands'>"];
                i.push('<span cmd="checkobj ' + s.id + ' from item">查看</span>'), q.pack.create_item_command(s, i), i.push("</span>"), $(i.join("")).appendTo(e)
            }
        }, eqitem_click: function () {
            var e = $(this).find(".eq-name"), t = q.pack.eqs[e.attr("oindex")];
            t && c("checkobj " + t.id + " from eq")
        }
    }, q.pack2 = {
        onData: function (e) {
            if (this.show(), e.items) this.eqs = e.eqs || [], this.money = e.money, this.id = e.id, this.command_before = "dc " + this.id + " ", this.items = e.items, this.target_name = e.name, this.max_count = e.max_item_count; else if (0 == this.updateitem(e)) return;
            this.show_items(), this.show_moeny()
        },
        createItems: q.pack.createItems,
        create_eqs: q.pack.create_eqs,
        init_element: q.pack.init_element,
        show_items: q.pack.show_items,
        updateitem: q.pack.updateitem,
        show_moeny: q.pack.show_moeny,
        show_sub: q.pack.show_sub,
        close: q.skills.close,
        hide: function () {
            this.element.remove(), this.isShow = !1
        },
        get_item: q.pack.get_item,
        create_item_command: q.pack.create_item_command,
        show: function () {
            q.isShow || q.show("pack2"), this.objelement && (this.objelement.remove(), this.objelement = null, this.packElement && this.packElement.show()), this.isShow || (this.isShow = !0, this.init_element(), this.packElement.on("click", ".obj-item", this.item_click), this.eqElement.on("click", ".eq-item", this.eqitem_click), this.element.appendTo(q.contentElement))
        },
        item_click: function () {
            var e = $(this), t = e.attr("oindex"), s = q.pack2.items[t];
            if (q.pack2.element.find(".item-commands").remove(), s) {
                var i = ["<span class='item-commands'>"];
                i.push('<span cmd="' + q.pack2.command_before + " checkobj " + s.id + ' from item">查看</span>'), q.pack2.create_item_command(s, i), i.push("</span>"), $(i.join("")).appendTo(e)
            }
        },
        eqitem_click: function () {
            var e = $(this).find(".eq-name"), t = q.pack2.eqs[e.attr("oindex")];
            t && c(q.pack2.command_before + " checkobj " + t.id + " from eq")
        }
    }, q.trade = {
        hide: function () {
            this.element.remove(), this.isShow = !1
        }, close: function () {
            this.hide()
        }, onData: function (e) {
            this.isShow || q.show("trade"), q.title("和" + e.name + "交易中");
            q.pack.items;
            this.trade_target = e.target, this.trade_list.length = 0, q.pack.items ? this.update_pack() : c("pack"), q.pack.isShow = !1, this.create_items(this.leftElement.empty(), this.trade_list, this.max_count)
        }, update_pack: function (e) {
            this.create_items(this.rightElement.empty(), q.pack.items, q.pack.max_count)
        }, max_count: 10, trade_list: [], show: function (e) {
            this.isShow || (q.init(), q.curItem = "trade", this.element || (this.element = $('<div class="dialog-list"><div class="obj-list"></div><div class="obj-list"></div></div >'), this.leftElement = $(this.element.children()[0]), this.rightElement = $(this.element.children()[1])), this.leftElement.on("click", ".obj-item", this.left_click), this.rightElement.on("click", ".obj-item", this.right_click), this.element.appendTo(q.contentElement.empty()), this.create_footer(), this.isShow = !0)
        }, create_footer: function () {
            var e = [];
            e.push("<span class='footer-item trade_btn ok' for='1''>确定</span>"), e.push("<span class='footer-item  trade_btn' for='0''>取消</span>"), q.footer(e.join(""))
        }, footerChanged: function (e) {
            if ((e = parseInt(e)) && this.trade_list.length) for (e = 0; e < this.trade_list.length; e++) c("give " + this.trade_target + " " + this.trade_list[e].count + " " + this.trade_list[e].id);
            q.hide()
        }, create_items: function (e, t, s) {
            for (var i = [], n = 0; n < s; n++) {
                var o = t[n];
                i.push('<div class="obj-item" oindex="'), i.push(n), i.push('"'), o ? (i.push(" oid='" + o.id + "'>"), i.push(o.name), 1 < o.count && (i.push("<span class='obj-value'>"), i.push(o.count), i.push(o.unit), i.push("</span>"))) : i.push("'>"), i.push("</div>")
            }
            e.html(i.join(""))
        }, left_click: function () {
            var e = $(this).attr("oindex"), t = q.trade.trade_list[e];
            if (t) return q.trade.cancle_trade(t), !1
        }, enable_item: function (e, t) {
            var s = this.rightElement.find(".obj-item[oid='" + e.id + "']");
            s.length && (t ? s.removeClass("disabled") : s.addClass("disabled"))
        }, right_click: function () {
            var e = $(this);
            if (!e.is(".disabled")) {
                var t = e.attr("oindex"), s = q.pack.items[t];
                if (s) return 1 < s.count ? U.Show_trade_add(s) : q.trade.add_trade(s), !1
            }
        }, add_trade: function (e) {
            for (var t = 0; t < this.trade_list.length; t++) if (e.id == this.trade_list[t].id) return this.trade_list[t].count += e.count, this.create_items();
            this.trade_list.push(e), this.create_items(this.leftElement.empty(), this.trade_list, this.max_count), this.enable_item(e, !1)
        }, cancle_trade: function (e) {
            for (var t = 0; t < this.trade_list.length; t++) e.id == this.trade_list[t].id && (this.trade_list.splice(t, 1), t--);
            this.create_items(this.leftElement.empty(), this.trade_list, this.max_count), this.enable_item(e, !0)
        }
    }, q.list = {
        hide: function () {
            this.element.remove(), this.isShow = !1
        }, close: function () {
            this.hide()
        }, level_desc: ["wht", "nor", "hic", "hiy", "him", "hio"], updateitem: function (e) {
            if (e.store) {
                var t = this.find_item(1, e.id), s = this.find_item(3, e.storeid);
                t ? t.count -= e.store : ((t = $.extend({}, s)).id = e.id, t.count = -e.store, q.pack.items.push(t)), s ? s.count += e.store : ((s = $.extend({}, t)).id = e.storeid, s.count = e.store, this.stores.push(s)), 0 == s.count && this.stores.Remove(s), 0 == t.count && q.pack.items.Remove(t)
            } else if (e.sell) {
                if (t = this.find_item(2, e.id)) return t.count -= e.sell, this.create_items(this.selllist, this.leftElement, 2, this.selllist.length)
            }
            this.isstore && (this.create_items(this.stores, this.leftElement, 3, this.max_store_count), q.title("你的仓库中有" + this.stores.length + "/" + this.max_store_count + "件物品")), this.update_pack(), null != e.money && this.show_footer(e.money)
        }, find_item: function (e, t) {
            var s = q.pack.items;
            2 == e ? s = this.selllist : 3 == e && (s = this.stores);
            for (var i = 0; i < s.length; i++) if (s[i].id == t) return s[i]
        }, onData: function (e) {
            if (this.show(), e) {
                if (e.id) return this.updateitem(e);
                var t = e.gongji || e.jungong;
                e.selllist && (this.isstore = !1, this.gongji = t, this.money_name = null, e.gongji ? this.money_name = "门派功绩" : e.jungong && (this.money_name = "军功"), this.selllist = e.selllist, this.create_items(e.selllist, this.leftElement, 2, e.selllist.length), q.titleElement.html(e.title), q.icon("shopping-cart")), this.update_pack(), e.stores && (this.create_items(e.stores, this.leftElement, 3, e.max_store_count), this.isstore = !0, this.stores = e.stores, q.titleElement.html("你的仓库中有" + e.stores.length + "/" + e.max_store_count + "件物品"), this.max_store_count = e.max_store_count, q.icon("lock")), t && (this.gongji = t, this.show_footer(t)), e.seller && (this.seller = e.seller)
            }
        }, show: function (e) {
            q.isShow && "list" == q.curItem || q.show("list"), this.rightElement && (this.rightElement.show(), q.pack.objelement && q.pack.objelement.remove()), this.isShow || (this.element || (this.element = $('<div class="dialog-list"><div class="obj-list"></div><div class="obj-list"></div></div >'), this.leftElement = $(this.element.children()[0]), this.rightElement = $(this.element.children()[1])), this.element.on("click", ".obj-item", q.list.item_click), this.element.appendTo(q.contentElement.empty()), this.isShow = !0)
        }, show_footer: function (e) {
            if (0 < (e = this.money_name ? this.gongji : e)) {
                var t = this.money_name ? "你目前有" + e + "<hiy>" + this.money_name + "</hiy>" : "你身上有" + M(e);
                q.footerElement.html("<div class='obj-money'>" + t + "<span cmd='sell all'>清理包裹</span></div>")
            } else {
                t = this.money_name ? "你还没有<hiy>" + this.money_name + "</hiy>" : "你身上没有任何银两";
                q.footerElement.html("<div class='obj-money'>" + t + "<span cmd='sell all'>清理包裹</span></div>")
            }
        }, update_pack: function () {
            var e = q.pack.items;
            e ? (this.create_items(e, this.rightElement, 1, q.pack.max_count), this.show_footer(q.pack.money)) : c("pack")
        }, create_items: function (e, t, s, i) {
            for (var n = [], o = 0; o < i; o++) {
                var a = e[o];
                n.push('<div class="obj-item" '), a ? (n.push('obj="'), n.push(a.id), n.push('" otype="'), n.push(s), n.push('">'), n.push(a.name), n.push("<span class='obj-value'>"), 2 == s ? (n.push("每"), n.push(a.unit), n.push(this.money_name ? a.value + "<hiy>" + this.money_name + "</hiy>" : M(a.value)), -1 == a.count ? n.push("：大量现货") : (n.push("：剩余"), n.push(a.count), n.push(a.unit))) : 1 != s || this.isstore ? 1 < a.count && (n.push(a.count), n.push(a.unit)) : a.value ? (n.push("每"), n.push(a.unit), n.push(M(a.value)), n.push("："), n.push(a.count), n.push(a.unit)) : n.push("不可出售"), n.push("</span>")) : n.push('">'), n.push("</div>")
            }
            t.html(n.join(""))
        }, item_click: function () {
            var e = $(this), t = e.attr("obj"), s = e.attr("otype"), i = q.list.find_item(s, t);
            if (i) {
                var n = ["<div class='item-commands'>"];
                q.list.isstore ? 3 == s ? (n.push('<span cmd="checkobj ' + t + ' from store">查看</span>'), n.push('<span cmd="_confirm qu ' + t + '">取出</span>')) : 1 == s && (n.push('<span cmd="checkobj ' + t + ' from item">查看</span>'), n.push('<span cmd="_confirm store ' + i.count + " " + t + '">存到仓库</span>')) : 2 == s ? (n.push('<span cmd="checkobj ' + t + " from " + q.list.seller + '">查看</span>'), i.count && n.push('<span cmd="_confirm buy ' + i.count + " " + t + " from " + q.list.seller + '">购买</span>')) : 1 == s && (n.push('<span cmd="checkobj ' + t + ' from item">查看</span>'), n.push('<span cmd="_confirm sell ' + i.count + " " + t + " to " + q.list.seller + '">卖掉</span>')), n.push("</div>"), q.list.element.find(".item-commands").remove(), $(n.join("")).appendTo(e)
            }
        }
    }, q.channel = {
        footer: [["全部", ""], ["世界", "chat"], ["队伍", "tm"], ["门派", "fam"], ["全区", "es"], ["系统", "sys"]],
        isScroll: !0,
        last_click: 0,
        show: function () {
            if (500 < Date.now() - this.last_click) this.last_click = Date.now(); else if (!q.channel.isShow) {
                q.select("channel"), q.icon("comment"), q.title(""), q.footer("");
                for (var e = 0; e < q.channel.footer.length; e++) {
                    var t = $("<span class='footer-item channel-item' for='" + q.channel.footer[e][1] + "'>" + q.channel.footer[e][0] + "</span>").appendTo(q.footerElement);
                    0 == e && t.addClass("select")
                }
                q.contentElement.html("").append(T.ChannelElement.addClass("channel-dialog")), q.channel.isShow = !0, q.channel.scrollBottom()
            }
        },
        hide: function () {
            q.channel.footerChanged(""), T.ChannelElement.removeClass("channel-dialog").insertBefore(p), this.scrollBottom(), this.isShow = !1
        },
        close: function () {
            this.hide()
        },
        scrollBottom: function () {
            q.channel.isScroll && (T.ChannelElement[0].scrollTop = 999999)
        },
        isBottom: function () {
            return !0
        },
        endScroll: function () {
            q.channel.isScroll = !1
        },
        beginScroll: function () {
            q.channel.isScroll = !0
        },
        footerChanged: function (e) {
            if (q.channel.select_item != e) {
                q.channel.select_item = e;
                for (var t = [], s = 0; s < this.datas.length; s++) {
                    var i = this.datas[s];
                    e && i[0] != e || t.push(i[1])
                }
                T.ChannelPro.html(t.join("")), this.scrollBottom()
            }
        },
        datas: [],
        createElement: function (e, t) {
            var s = "hic", i = "";
            switch (e.ch) {
                case"tm":
                    s = "hig", i = "队伍";
                    break;
                case"fam":
                    s = "hiy", i = e.fam || "门派";
                    break;
                case"rumor":
                    s = "him", i = "谣言", e.name = "某人";
                    break;
                case"sys":
                    s = "hir", i = "系统", e.name = "";
                    break;
                case"es":
                    s = "hio", i = e.server, e.uid = null;
                    break;
                default:
                    i = ["闲聊", "闲聊", "闲聊", "<hiy>宗师</hiy>", "<HIZ>武圣</HIZ>", "<hio>武帝</hio>", "<ord>武神</ord>"][e.lv]
            }
            var n = ["<", s, ">【"];
            n.push(i), n.push("】"), e.name && (n.push("<span"), e.uid && n.push(" cmd='look3 " + e.uid + "'"), n.push(">"), n.push(e.name), n.push("</span>：")), n.push(e.content), t && n.push("\n");
            var o = n.join("");
            return 500 < this.datas.length && (this.datas.length = 0), "rumor" == e.ch && (e.ch = "sys"), this.datas.push([e.ch, o]), this.select_item && this.select_item != e.ch ? "" : o
        }
    }, q.setting = {
        footer: [["显示", "setting"], ["帮助", "help"], ["<yel>高级</yel>", "custom"]],
        selectitem: null,
        init: function () {
            if (!this.settingElement) {
                this.settingElement = $(".dialog-setting"), this.gamesettingElement = $(".dialog-gamesetting"), this.helpElement = $(".dialog-help"), this.customElement = $(".dialog-custom");
                for (var e = $(".setting>.setting-item"), t = 0; t < e.length; t++) {
                    var s = $(e[t]), i = s.attr("for");
                    if (i) {
                        var n = R[i];
                        switch (i) {
                            case"fontsize":
                                this.select_color(s.find(".color-item"), n, "fontSize");
                                break;
                            case"fontcolor":
                            case"backcolor":
                                this.select_color(s.find(".color-item"), n, "backgroundColor");
                                break;
                            case"auto_pfm":
                            case"auto_pfm2":
                                n && (s.find(".switch ").addClass("on"), s.find(".switch-text").html("开"), $("#" + i).show().val(n));
                                break;
                            case"auto_work":
                                n && (s.find(".switch ").addClass("on"), s.find(".switch-text").html("开"), $("#" + i).show().val(1 != n ? n : ""));
                                break;
                            default:
                                1 == n && (s.find(".switch ").addClass("on"), s.find(".switch-text").html("开"))
                        }
                    }
                }
            }
        },
        show: function () {
            if (this.init(), !this.isShow) {
                this.footerChanged("setting"), q.icon("cog"), q.title("设置"), q.footerElement.empty();
                for (var e = 0; e < this.footer.length; e++) {
                    var t = $("<span class='footer-item' for='" + this.footer[e][1] + "'>" + this.footer[e][0] + "</span>").appendTo(q.footerElement);
                    0 == e && t.addClass("select")
                }
                this.isShow = !0
            }
        },
        select_color: function (e, t, s) {
            for (var i = 0; i < e.length; i++) e[i].style[s] == t ? $(e[i]).addClass("select") : $(e[i]).removeClass("select")
        },
        footerChanged: function (e) {
            this.selectitem && this.selectitem.remove(), this.selectitem = this[e + "Element"], "setting" == e ? (this.selectitem.on("click", ".switch", this.switchClick), this.selectitem.on("click", ".color-item", this.colorClick)) : "custom" == e ? (this.selectitem.on("click", ".switch", this.switchClick), this.selectitem.on("click", ".setting-ok", this.save_custom)) : this.selectitem.on("click", ".help-item", this.helpClick), this.selectitem.appendTo(q.contentElement)
        },
        helpClick: function () {
            var e = $(this).attr("action");
            switch (e) {
                case"tologin":
                    break;
                case"torole":
                    i.Close(), HideAndShow("#role_panel", function () {
                        T.player = null, T.clear()
                    });
                    break;
                case"toserver":
                    T.player = null, i.Close();
                    break;
                default:
                    q.setting.show_help(e)
            }
        },
        show_help: function (e) {
            N.Get("doc/" + e + ".html", function (e) {
                e && (this.frame = $("<div class='help-content'>" + e + "</div>").appendTo(this.selectitem))
            }.bind(this)), this.selectitem.addClass("help-detl")
        },
        close_help: function () {
            this.frame && (this.frame.remove(), this.selectitem.removeClass("help-detl"), this.frame = null)
        },
        hide: function () {
            if (this.frame) return this.close_help(), !1;
            this.close()
        },
        close: function () {
            this.close_help(), this.selectitem.remove(), this.isShow = !1
        },
        save_custom: function () {
            if ($(".dialog-custom>.setting-item[for='auto_pfm']>.switch").is(".on")) {
                if (!(e = $("#auto_pfm").val())) return S("<hir>你没有设置自动出招的绝招。</hir>");
                R.save("auto_pfm", e)
            }
            if ($(".dialog-custom>.setting-item[for='auto_pfm2']>.switch").is(".on")) {
                if (!(e = $("#auto_pfm2").val())) return S("<hir>你没有设置自动反击的绝招。</hir>");
                R.save("auto_pfm2", e)
            }
            if ($(".dialog-custom>.setting-item[for='auto_work']>.switch").is(".on")) {
                var e = $("#auto_work").val();
                R.save("auto_work", e || 1)
            }
            S("<hic>设置已保存。</hic>")
        },
        get_pfms: function (e) {
            if (!E.Skills) return S("<hir>你没有可用的绝招设置。</hir>");
            for (var t = [], s = 0; s < E.Skills.length; s++) 0 < t.length && t.push(","), t.push(E.Skills[s].id);
            $("#" + e).val(t.join("")), S("<hic>已自动设置为你默认的绝招，你可以修改为适合你的出招顺序后点击保存。</hic>")
        },
        switchClick: function (e) {
            var t = $(this), s = t.parent().attr("for"), i = 0;
            switch (t.is(".on") ? (t.removeClass("on"), t.find(".switch-text").html("关")) : (t.addClass("on"), t.find(".switch-text").html("开"), i = 1), s) {
                case"auto_pfm":
                case"auto_pfm2":
                    i ? ($("#" + s).show(), q.setting.get_pfms(s), R[s] = 0) : ($("#" + s).hide(), R.save(s, 0));
                    break;
                case"auto_work":
                    i ? $("#" + s).show() : ($("#" + s).hide(), R.save(s, 0));
                    break;
                default:
                    R.save(s, i)
            }
            return !(e.cancelable = !0)
        },
        colorClick: function () {
            var e = $(this);
            if (!e.is(".select")) {
                var t = e.parent();
                t.children().removeClass("select"), e.addClass("select");
                var s = t.closest(".setting-item").attr("for");
                if (s) {
                    var i = "";
                    switch (s) {
                        case"fontsize":
                            i = e[0].style.fontSize;
                            break;
                        case"fontcolor":
                        case"backcolor":
                            i = e[0].style.backgroundColor
                    }
                    R.save(s, i)
                }
            }
        }
    }, q.tasks = {
        close: function () {
            this.element.remove(), this.isShow = !1
        }, update_item: function (e) {
            for (var t = 0; t < this.items.length; t++) if (this.items[t].id == e.id) {
                e.state ? (this.items[t].title = e.title, this.items[t].state = e.state, this.items[t].desc = e.desc) : this.items.splice(t, 1);
                break
            }
            this.create_items()
        }, onData: function (e) {
            if (e.id) return this.update_item(e);
            q.title("任务列表"), q.icon("exclamation-sign"), this.items = e.items, this.create_items()
        }, show: function () {
            this.element || (this.element = $("<div class='dialog-tasks'></div>")), c("tasks"), this.isShow || (this.element.appendTo(q.contentElement), q.footer(""), this.isShow = !0)
        }, create_items: function () {
            for (var e = [], t = 0; t < this.items.length; t++) {
                var s = this.items[t];
                e.push("<div class='task-item'>"), e.push("<h3>"), e.push(t + 1), e.push("· "), e.push(s.title), e.push("</h3>"), e.push("<pre class='task-desc'>"), e.push(s.desc), e.push("</pre>"), e.push("<span"), 1 == s.state ? (e.push(" class='task-btn start'>"), e.push("进行中")) : 2 == s.state ? (e.push(' cmd="taskover '), e.push(s.id), e.push('"'), e.push(" class='task-btn finish'>"), e.push("可领取")) : 3 == s.state && (e.push(" class='task-btn over'>"), e.push("已完成")), e.push("</span>"), e.push("</div>")
            }
            this.element.html(e.join(""))
        }
    }, q.stats = {
        footers: [{cmd: "score", name: "综合榜"}, {cmd: "top", name: "高手榜"}, {cmd: "weapon", name: "兵器谱"}],
        selectedItem: 0,
        close: function () {
            this.element.remove(), this.isShow = !1
        },
        onData: function (e) {
            return e.close ? q.hide() : e.tops ? (e.top ? this.show_desc("你目前在第" + e.top + "名") : this.show_desc("你目前没有上榜"), this.create_tops(e.tops, e)) : e.weapons ? (this.show_desc(""), this.create_weapons(e.weapons)) : e.scores ? (this.show_desc("你目前的评分：" + e.score), this.create_scores(e.scores)) : void 0
        },
        create_scores: function (e, t) {
            for (var s = [], i = ["一　", "二　", "三　", "四　", "五　", "六　", "七　", "八　", "九　", "十　", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十"], n = 0; n < i.length; n++) s.push("<div class='top-item scores top"), s.push(n + 1), s.push("' top='"), s.push(n + 1), s.push("'><span class='top-title'>"), s.push(i[n]), s.push("、</span>"), s.push("<span class='top-name'>"), s.push(e[n][0]), s.push("</span>"), s.push("<span class='top-sc'>"), s.push(e[n][1]), s.push("</span>"), s.push("</div>");
            this.element.html(s.join(""))
        },
        create_tops: function (e, t) {
            for (var s = [], i = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"], n = 0; n < i.length; n++) s.push("<div class='top-item top top"), s.push(n + 1), s.push("' top='"), s.push(n + 1), s.push("'><span class='top-title'>"), s.push("天下第"), s.push(i[n]), s.push("</span>"), s.push("<span class='top-name'>"), s.push(e[n]), s.push("</span>"), s.push("</div>");
            this.element.html(s.join("")), this.top = t.top
        },
        create_weapons: function (e) {
            for (var t = [], s = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"], i = 0; i < s.length; i++) t.push("<div class='top-item weapon top"), t.push(i + 1), t.push("' top='"), t.push(i + 1), t.push("'><span class='top-title'>"), t.push(s[i]), t.push("、</span>"), t.push("<span class='top-name'>"), t.push(e[i]), t.push("</span>"), t.push("</div>");
            this.element.html(t.join(""))
        },
        show: function () {
            this.selectedItem || (this.selectedItem = this.footers[0]), c("stats " + this.selectedItem.cmd), this.element || (this.element = $("<div class='dialog-stats'></div>")), this.isShow || (this.create_footer(), q.icon("stats"), q.contentElement.html(this.element), this.element.on("click", ".top-item", this.itemClick), this.isShow = !0)
        },
        create_footer: function () {
            for (var e = [], t = 0; t < this.footers.length; t++) {
                var s = this.footers[t];
                e.push("<span class='footer-item" + (s == this.selectedItem ? " select" : "") + "' for='" + t + "''>" + s.name + "</span>")
            }
            e.push("<span class='stats-span'></span>"), q.footer(e.join(""))
        },
        show_desc: function (e) {
            q.footerElement.find(".stats-span").html(e)
        },
        footerChanged: function (e) {
            var t = this.footers[e];
            t != this.selectedItem && (this.selectedItem = t, q.title(this.selectedItem.name), c("stats " + this.selectedItem.cmd))
        },
        itemClick: function () {
            var e = $(this), t = parseInt(e.attr("top")), s = e.is(".top"), i = e.is(".weapon"),
                n = ["<div class='item-commands'>"];
            s ? (n.push('<span cmd="look1 ' + t + '">查看</span>'), !q.stats.top || t < q.stats.top ? n.push('<span cmd="challenge ' + t + '">挑战</span>') : t == q.stats.top && n.push('<span cmd="stats copy">更新应战状态</span>'), n.push('<span cmd="reward top ' + t + '">查看奖励</span>')) : i ? (n.push('<span cmd="stats weapon ' + t + '">查看</span>'), n.push('<span cmd="reward weapon ' + t + '">查看奖励</span>')) : (n.push('<span cmd="stats score ' + t + '">查看</span>'), n.push('<span cmd="reward score ' + t + '">查看奖励</span>')), n.push("</div>"), q.stats.element.find(".item-commands").remove(), $(n.join("")).appendTo(e)
        }
    }, q.jh = {
        unlock: 0, close: function () {
            this.element.remove(), this.isShow = !1
        }, update_item: function (e) {
            for (var t = 0; t < this.items.length; t++) if (this.items[t].id == e.id) {
                e.state ? (this.items[t].title = e.title, this.items[t].state = e.state, this.items[t].desc = e.desc) : this.items.splice(t, 1);
                break
            }
            this.create_items()
        }, onData: function (e) {
            if (e.close) return q.isShow && q.hide();
            if (e.desc) {
                if ("fb" == e.t) {
                    if (!(t = this.fbs[e.index])) return;
                    return t.desc = e.desc, t.reward = e.reward, t.is_diffi = e.is_diffi, t.is_multi = e.is_multi, t.no_single = e.no_single, this.show_fbdesc(t)
                }
                if ("fam" == e.t) {
                    var t;
                    if (!(t = this.families[e.index])) return;
                    return t.desc = e.desc, t.sp = e.sp, t.skills = e.skills, t.no_cache = e.no_cache, t.iszc = e.iszc, this.show_famdesc(t)
                }
            }
            if (e.unlock) return this.unlock = e.unlock || 0, this.unlock >= this.fbs.length && (this.unlock = this.fbs.length - 1), void this.update_lock();
            e.fbs && (this.fbs = e.fbs.map(function (e) {
                return {name: e}
            }), this.families = e.families.map(function (e) {
                return {name: e}
            }), this.create_footer(), this.show_family())
        }, show_famdesc: function (e) {
            if (e) {
                var t = ["<pre><hig>"];
                t.push(e.name), t.push("</hig>\n"), t.push(e.desc), e.sp && (t.push("\n<hig>特点："), t.push(e.sp), t.push("</hig>")), e.iszc ? e.wait ? t.push('\n<span class="item-commands"><span  class="disabled">已报名参加正在等待进入战场</span></span>') : t.push('\n<span class="item-commands" ><span  cmd="">报名参加</span></span>') : t.push('\n<span class="item-commands"><span cmd="jh fam ' + e.index + ' start">进入地图</span></span>'), e.skills && t.push(e.skills), t.push("</pre>"), this.descElement.html(t.join("")), this.select(e.index), e.no_cache && (e.desc = null)
            }
        }, select: function (e) {
            var t = this.listElement.find("span[index='" + e + "']");
            if (t.length && !t.is(".selected")) {
                var s = t[0].offsetTop, i = this.listElement.height();
                i / 2 < s && (s = (i - t.height()) / 2, q.jh.listElement[0].scrollTop = s), q.jh.selectedItem && q.jh.selectedItem.removeClass("selected"), q.jh.selectedItem = t, q.jh.selectedItem.addClass("selected")
            }
        }, show_fbdesc: function (e) {
            if (e) {
                var t = ["<pre>"];
                t.push(e.name), this.unlock >= e.index ? t.push("<hig>已解锁</hig>") : t.push("<red>未解锁</red>"), t.push(e.desc), this.unlock >= e.index ? (t.push('<span class="item-commands">'), e.no_single || t.push('<span cmd="jh fb ' + e.index + ' start1">进入副本</span>'), e.is_diffi && t.push('<span cmd="jh fb ' + e.index + ' start2">困难模式</span>'), e.is_multi && t.push('<span cmd="jh fb ' + e.index + ' start3">组队进入</span>'), t.push("</span>")) : t.push(""), t.push(e.reward), t.push("</pre>"), this.descElement.html(t.join("\n")), this.select(e.index)
            }
        }, show: function () {
            this.isShow || (this.element || (this.element = $("<div class='dialog-fb'><div class='fb-left'></div><div class='fb-right'></div></div>")), this.listElement = this.element.find(".fb-left").on("click", ".fb-item,.fam-item", this.item_click), this.descElement = this.element.find(".fb-right"), q.title("江湖"), q.icon("home"), this.element.appendTo(q.contentElement), this.create_footer(), this.fbs ? c("jh fb lock") : c("jh"), this.isShow = !0)
        }, selected_item: 0, footers: ["门派", "副本"], create_footer: function () {
            if (this.fbs) {
                q.footer("");
                for (var e = [], t = 0; t < this.footers.length; t++) e.push("<span class='footer-item" + (t == this.selected_item ? " select" : "") + "' for='" + t + "''>" + this.footers[t] + "</span>");
                $(e.join("")).appendTo(q.footerElement)
            }
        }, item_click: function () {
            var e = $(this);
            if (!e.is(".selected")) {
                var t = e.attr("index");
                if (e.is(".fb-item")) {
                    var s = q.jh.fbs[t];
                    s.desc ? q.jh.show_fbdesc(s) : c("jh fb " + t)
                } else {
                    var i = q.jh.families[t];
                    i.desc ? q.jh.show_famdesc(i) : c("jh fam " + t)
                }
                q.jh.selectedItem && q.jh.selectedItem.removeClass("selected"), q.jh.selectedItem = e, q.jh.selectedItem.addClass("selected")
            }
        }, update_lock: function () {
            if (this.listElement) {
                var e = this.listElement.find(".fb-item[index='" + this.unlock + "']");
                e.is(".lock") && e.removeClass("lock")
            }
        }, footerChanged: function (e) {
            e != this.selected_item && (0 == (this.selected_item = e) ? this.show_family() : (this.show_fbs(), this.selectedItem && this.selectedItem.is(".fb-item") || c("jh fb " + this.unlock)))
        }, show_family: function () {
            for (var e = [], t = 0; t < this.families.length; t++) {
                var s = this.families[t];
                e.push('<div class="fam-item'), e.push('" index="'), e.push(t), e.push('">'), s.index = t, e.push(s.name), e.push("</div>")
            }
            this.listElement.html(e.join(""));
            var i = this.listElement.children()[0];
            this.item_click.call(i)
        }, show_fbs: function () {
            for (var e = ["<div class='fb-content'>"], t = 0; t < this.fbs.length; t++) {
                var s = this.fbs[t];
                e.push('<div class="fb-item'), t > this.unlock && e.push(" lock"), s.index = t, e.push('" index="'), e.push(t), e.push('">'), e.push(s.name), e.push("</div>"), t != this.fbs.length - 1 && e.push("<div class='line'></div>")
            }
            e.join("</div>"), this.listElement.html(e.join(""))
        }
    }, q.shop = {
        close: function () {
            this.element.remove(), this.isShow = !1
        }, onData: function (e) {
            this.cash_money = e.cash_money, e.selllist && (this.selllist = e.selllist, this.show_items()), this.show_moeny()
        }, show_items: function () {
            this.create_items(this.selllist)
        }, show_moeny: function () {
            this.isShow && (window.isios ? q.footer("<div class='dialog-shop-footer'>你身上有<hij> " + this.cash_money + " 元宝</hij></div>") : q.footer("<div class='dialog-shop-footer'>你身上有<hij> " + this.cash_money + " 元宝</hij><span cmd='transmoney'>账号转入</span><span cmd='pay'>充值</span><span cmd='tg'>推广</span></div>"))
        }, show: function (e) {
            this.element || (this.element = $("<div class='dialog-shop'></div>")), this.isShow || (q.title("商品列表"), q.icon("shopping-cart"), this.isShow = !0, this.element.appendTo(q.contentElement), this.selllist ? this.show_moeny() : c("shop"))
        }, create_items: function (e) {
            for (var t = [], s = 0; s < e.length; s++) {
                var i = e[s];
                t.push("<div class='shop-item'>"), t.push("<h3>"), t.push(i.name), t.push("</h3>"), t.push("<pre class='shop-desc'>"), t.push(i.desc), t.push("</pre>"), t.push("<div class='shop-btn' "), t.push('cmd="_confirm shop '), t.push(s), t.push('">'), t.push(i.value), t.push("元宝</div>"), t.push("</div>")
            }
            this.element.html(t.join(""))
        }
    }, q.message = {
        close: function () {
            this.element.remove(), this.isShow = !1
        },
        hide: function () {
            if (this.element.is(".detail")) return this.element.removeClass("detail"), this.detailID = null, !1
        },
        selected_item: 0,
        messages: [],
        isLoad: !1,
        unRead: 0,
        onData: function (e) {
            if (e.receive) return this.updateMessageState(e.receive, e.index);
            if (e.items) return this.createMessageDetail(e.id, e.items);
            if (null != e.unRead && (this.unRead = e.unRead), e.messages) for (var t = 0; t < e.messages.length; t++) this.addMessage(e.messages[t]);
            e.message && (this.isShow || this.unRead++, this.messages && this.addMessage(e.message), "notice" == e.message.id && this.showNotice(e.message)), this.isShow && this.showMessages(e.message), this.showUnread()
        },
        showUnread: function () {
            this.unRead ? v.showFlag("message", this.unRead) : v.showFlag("message", 0)
        },
        addMessage: function (e) {
            for (var t = 0; t < this.messages.length; t++) if (this.messages[t].id == e.id) return void(this.messages[t] = e);
            this.messages.push(e)
        },
        show: function (e) {
            this.unRead = 0, this.showUnread(), this.isShow || (this.isShow = !0, q.title("消息"), q.icon("envelope"), this.create_footer(), this.footerChanged(this.selected_item), this.isLoad || c("message"), this.isLoad = !0, this.element.on("click", ".message-item", this.showMessageDetail))
        },
        footers: ["消息", "队伍", "关系"],
        footerElements: ["message", "team", "relation", "party"],
        create_footer: function () {
            for (var e = [], t = 0; t < this.footers.length; t++) e.push("<span class='footer-item" + (t == this.selected_item ? " select" : "") + "' for='" + t + "''>" + this.footers[t] + "</span>");
            q.footer(e.join("")), this.showChild()
        },
        footerChanged: function (e) {
            e != this.selected_item && (this.selected_item = e, this.showChild())
        },
        showChild: function () {
            var e = q[this.footerElements[this.selected_item]];
            e.element || (e.element = e.createElement()), q.contentElement.html(e.element), this.selectedChild != e && (this.selectedChild && this.selectedChild.close(), e.show(), this.selectedChild = e)
        },
        showNotice: function (e) {
            var t = ["\n<hiy>系统公告</hiy>\n"], s = new Date(e.time);
            t.push(s.getFullYear()), t.push("年"), t.push(s.getMonth() + 1), t.push("月"), t.push(s.getDate()), t.push("日 "), t.push(s.getHours()), t.push("时"), t.push(s.getMinutes()), t.push("分\n<hic>"), t.push(e.content), t.push("\n</hic>"), S(t.join(""))
        },
        showMessages: function (e) {
            for (var t = [], s = 0; s < this.messages.length; s++) {
                var i = this.messages[s];
                t.push("<div class='message-item' fromid=\""), t.push(i.id), t.push("\"><div class='message-title'>"), t.push(i.name), t.push("<span class='message-time'>"), t.push(this.getTimedesc(i.time)), t.push("</span>"), t.push("</div>"), t.push("<div class='message-content'>");
                var n = i.content;
                20 < n.length && (n = n.substr(0, 20) + "..."), t.push(n), t.push("</div>"), t.push("</div>")
            }
            t.length || t.push('<div class="empty">暂无新消息</div>'), this.listElement || (this.listElement = this.element.find(".message-list")), this.listElement.html(t.join("")), e && this.detailID == e.id && this.detailElement.append($(this.createMessageDetailItem(e.id, e.name, e)))
        },
        getTimedesc: function (e) {
            var t = new Date, s = new Date(e), i = (t - s) / 1e3;
            if (i < 60) return "刚刚";
            if (i < 3600) return parseInt(i / 60) + "分钟前";
            if (s.getFullYear() == t.getFullYear() && s.getMonth() == t.getMonth()) {
                var n = s.getDate() - t.getDate(),
                    o = "今天 " + this.add_zero(s.getHours()) + "：" + this.add_zero(s.getMinutes());
                if (0 == n) return o;
                if (1 == n) return "昨天 " + o;
                if (2 == n) return "前天 " + o
            }
            return s.getMonth() + 1 + "月" + s.getDate() + "日 " + this.add_zero(s.getHours()) + "：" + this.add_zero(s.getMinutes())
        },
        add_zero: function (e) {
            return e < 10 ? "0" + e : e
        },
        showMessageDetail: function () {
            var e = $(this).attr("fromid");
            e && (c("message " + e), q.message.element.addClass("detail"))
        },
        getMessageitem: function (e) {
            for (var t = 0; t < this.messages.length; t++) if (this.messages[t].id == e) return this.messages[t]
        },
        createMessageDetail: function (e, t) {
            this.detailElement || (this.detailElement = this.element.find(".detail-list"));
            var s = this.getMessageitem(e);
            if (s) {
                var i = [];
                this.detailID = e;
                for (var n = 0; n < t.length; n++) {
                    var o = t[n];
                    i.push(this.createMessageDetailItem(e, s.name, o))
                }
                this.detailElement.html(i.join(""))
            }
        },
        createMessageDetailItem: function (e, t, s) {
            var i = [];
            if (i.push("<div class='detail-item' index='" + s.index + "'>"), i.push("<span class='detail-name'>"), i.push(t), i.push("</span>"), i.push("<span class='detail-time'>"), i.push(this.getTimedesc(s.time)), i.push("</span>"), i.push("<pre class='detail-content'>"), i.push(s.content), i.push("</pre>"), s.attach) {
                for (var n = 0; n < s.attach.length; n++) i.push("<div class='detail-attach'>"), i.push(s.attach[n].name), i.push("</div>");
                s.rec ? i.push("<div class='item-commands'><span class='disabled'>已领取</span></div>") : i.push("<div class='item-commands'><span cmd='receive " + e + " " + s.index + "'>领取</span></div>")
            }
            return i.push("</div>"), i.join("")
        },
        createElement: function () {
            return $('<div class="dialog-message"><div class="message-list"></div><div class="detail-list"></div></div>')
        },
        updateMessageState: function (e, t) {
            this.detailID == e && this.detailElement.find(".detail-item[index='" + t + "']>.item-commands>span").html("已领取").addClass("disabled")
        }
    }, q.relation = {
        createElement: function () {
            return $('<div class="dialog-relation"></div>')
        }, show: function () {
            c("relation"), this.isShow = !0, q.title("关系")
        }, onData: function (e) {
            var t = [];
            t.push("<div class='relation-item'>"), e.husband ? (t.push("你的丈夫："), t.push(e.husband)) : e.wife ? (t.push("你的妻子："), t.push(e.wife)) : t.push("你目前没有结婚。"), t.push("</div>"), e.wife && (t.push("<div class='item-commands'>"), t.push("<span cmd='_confirm greet wife'>❀送花❀</span>"), t.push("</div>")), t.push("<div class='relation-item'>"), e.shifu ? (t.push("你的师父："), t.push(e.shifu)) : e.tudi ? (t.push("你的徒弟："), t.push(e.tudi)) : t.push("你目前没有拜师，也没有收徒。"), e.shifu && (t.push("<div class='item-commands'>"), t.push("<span cmd='greet master'>请安</span>"), e.sid && t.push("<span cmd='team add " + e.sid + "'>邀请组队</span>"), t.push("</div>")), e.tid && (t.push("<div class='item-commands'>"), t.push("<span cmd='team add " + e.tid + "'>邀请组队</span>"), t.push("</div>")), null != e.st && (t.push("<div class='relation-item'>"), t.push("你本周已完成" + e.st + "次师徒任务。"), t.push("</div>")), e.reward && (t.push("<div class='relation-item'>"), t.push(e.reward), t.push("</div>")), t.push("</div>"), this.element.html(t.join(""))
        }, close: function () {
            this.element.remove(), this.isShow = !1
        }
    }, q.team = {
        createElement: function () {
            return $('<div class="dialog-team"></div>')
        }, show: function () {
            c("team"), this.isShow = !0, q.title("队伍"), this.element.on("click", ".team-item", this.clickItem)
        }, items: [], onData: function (e) {
            if (e.items && (this.items = e.items, e.items.length ? this.isCap = e.items[0].id == T.player : this.isCap = 0), e.dismiss && (this.items.length = 0, this.isCap = !1), e.remove) {
                if (!this.items.length) return;
                for (var t = 0; t < this.items.length; t++) if (this.items[t].id == e.remove) {
                    this.items.splice(t, 1);
                    break
                }
            }
            this.createItems()
        }, close: function () {
            this.element.remove(), this.isShow = !1
        }, createItems: function () {
            if (this.element) {
                for (var e = [], t = 0; t < this.items.length; t++) {
                    var s = this.items[t];
                    e.push("<div class='team-item' index='" + t + "'>"), e.push("<span class='team-flag'>"), e.push(0 < t ? "" : "<span class='glyphicon glyphicon-flag'></span>"), e.push("</span>"), e.push("<span class='team-title'>"), e.push(s.name), e.push("</span>"), e.push("</div>")
                }
                e.length || e.push('<div class="empty">你还没有加入任何队伍。</div>'), this.element.html(e.join(""))
            }
        }, clickItem: function () {
            var e = $(this), t = q.team.items[e.attr("index")];
            if (t) {
                var s = ["<div class='item-commands'>"];
                s.push('<span cmd="look3 ' + t.id + '">查看</span>');
                var i = q.team.items[0].id == T.player;
                i && t.id != T.player ? s.push('<span cmd="team remove ' + t.id + '">移出队伍</span>') : t.id == T.player && s.push('<span cmd="team out ' + t.id + '">退出队伍</span>'), i && t.id == T.player && s.push('<span cmd="team set">更改分配方式</span>'), s.push("</div>"), q.team.element.find(".item-commands").remove(), $(s.join("")).appendTo(e)
            }
        }
    }, q.party = {
        show: function () {
            if (!this.data) return c("party")
        }, onData: function (e) {
        }
    }, q.friend = {
        show: function () {
            if (!this.data) return c("friend")
        }, onData: function (e) {
        }
    };
    var R = {
            keep_msg: 0,
            show_hp: 0,
            item_autoheight: 0,
            item_firstme: 0,
            hide_roomdesc: 0,
            exits_dir: 0,
            show_command: 0,
            fontsize: "0.875rem",
            no_spmsg: 0,
            fontcolor: "#008000",
            backcolor: "black",
            auto_showcombat: 0,
            auto_hideroom: 0,
            fullscreen: 0,
            channel_chat: 1,
            channel_tm: 1,
            channel_fam: 1,
            channel_es: 1,
            ban_pk: 0,
            off_plist: 0,
            ban_master: 0,
            no_load: !0,
            load: function (e) {
                if (e) for (var t in e) "fullscreen" != t && (this.set_prop(t, e[t]), this[t] = e[t])
            },
            set_prop: function (e, t) {
                switch (e) {
                    case"fontsize":
                        $(".container").css("font-size", t);
                        break;
                    case"fontcolor":
                        $(document.body).css("color", t);
                        break;
                    case"backcolor":
                        $(document.body).css("background-color", t);
                        break;
                    case"hide_roomdesc":
                        t ? $(".room_desc").hide() : $(".room_desc").show();
                        break;
                    case"exits_dir":
                        T.exits();
                        break;
                    case"item_autoheight":
                        t ? $(".room_items").removeAttr("style") : $(".room_items").attr("style", "max-height: 8rem; overflow-y: auto;");
                        break;
                    case"item_firstme":
                        if (1 == t) {
                            var s = $(".room_items>.room-item[itemid='" + T.player + "']");
                            $(".room_items").prepend(s)
                        }
                        break;
                    case"show_hp":
                        E.IsShow || (1 == t ? $(".room-item>.item-status").show() : $(".room-item>.item-status").hide());
                        break;
                    case"fullscreen":
                        t ? R.launchFullScreen() : R.exitFullscreen();
                        break;
                    case"show_command":
                        T.itemsElement.find(".item-commands").remove();
                        break;
                    case"no_spmsg":
                        T.ChannelElement && (t ? T.ChannelElement.hide() : T.ChannelElement.show())
                }
            },
            save: function (e, t) {
                this[e] = t, this.set_prop(e, t), c("setting " + e + " " + t)
            },
            launchFullScreen: function (e) {
                (e = e || document.documentElement).requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen()
            },
            exitFullscreen: function () {
                document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()
            }
        }, P = "万俟司马上官欧阳夏侯诸葛闻人东方赫连皇甫尉迟公羊澹台公冶宗政濮阳淳于单于太叔申屠公孙仲孙轩辕令狐锺离宇文长孙慕容鲜于闾丘司徒司空丌官司寇子车颛孙端木巫马公西乐正公良拓拔夹谷谷梁梁丘左丘东门西门",
        D = "赵钱孙李周吴郑王冯陈楮卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎",
        H = "世舜丞主产仁仇仓仕仞任伋众伸佐佺侃侪促俟信俣修倝倡倧偿储僖僧僳儒俊伟列则刚创前剑助劭势勘参叔吏嗣士壮孺守宽宾宋宗宙宣实宰尊峙峻崇崈川州巡帅庚战才承拯操斋昌晁暠曹曾珺玮珹琒琛琩琮琸瑎玚璟璥瑜生畴矗矢石磊砂碫示社祖祚祥禅稹穆竣竦综缜绪舱舷船蚩襦轼辑轩子杰榜碧葆莱蒲天乐东钢铎铖铠铸铿锋镇键镰馗旭骏骢骥驹驾骄诚诤赐慕端征坚建弓强彦御悍擎攀旷昂晷健冀凯劻啸柴木林森朴骞寒函高魁魏鲛鲲鹰丕乒候冕勰备宪宾密封山峰弼彪彭旁日明昪昴胜汉涵汗浩涛淏清澜浦澉澎澔瀚瀛灏沧虚豪豹辅辈迈邶合部阔雄霆震韩俯颁颇频颔风飒飙飚马亮仑仝代儋利力劼勒卓哲喆展帝弛弢弩彰征律德志忠思振挺掣旲旻昊昮晋晟晸朕朗段殿泰滕炅炜煜煊炎选玄勇君稼黎利贤谊金鑫辉墨欧有友闻问",
        O = "筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜姬舒影荔枝思丽秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊勤珍贞莉兰凤洁梅琳素云莲真环雪荣妹霞香月莺媛艳瑞凡佳嘉琼桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥";
    var U = {
        DEFAULT: {
            height: 60, onOK: function () {
            }, footer: !0, btn_text: "确认"
        }, Show: function (e) {
            this.Init(), this.Parameter = $.extend({}, this.DEFAULT, e || {}), this.content.empty().append(this.Parameter.content), this.element.css({
                height: this.Parameter.height,
                bottom: 0,
                display: "block"
            }), this.Parameter.footer ? (this.btn.show(), this.btn.find(".btn-text").html(this.Parameter.btn_text), this.content.css("width", "65%")) : (this.btn.hide(), this.content.css("width", "100%")), this.isShow = !0
        }, Close: function () {
            U.isShow && (U.element.css("bottom", -U.Parameter.height), setTimeout(function () {
                U.element.hide()
            }, 200), U.isShow = !1)
        }, Init: function () {
            this._init || (this.element = $(".dialog-confirm"), this.content = this.element.find(".dialog-content"), this.btn = this.element.find(".dialog-btn"), this.element.on("click", ".btn-ok", function (e) {
                return U.Parameter.onOK(), U.Close(), !1
            }), this.element.on("click", ".btn", function (e) {
                var t = U.max_count || 1e3, s = $(e.target), i = parseInt(s.attr("ac")), n = s.parent().find("input"),
                    o = parseInt(n.val());
                return "NaN" == o.toString() && (o = 0), -10 == i ? o -= 10 : 10 == i ? (1 == o && (o = 0), o += 10) : o = 1 == i ? t : 1, o < 1 ? o = 1 : t < o && (o = t), n.val(o), !1
            }), this._init = !0)
        }, Process: function (e) {
            var t = e[1], s = "";
            "dc" == t && (t = e[3], s = (s = e.splice(1, 2))[0] + " " + s[1] + " ");
            var i = this["Show_" + t];
            i && i.call(this, e, s)
        }, get_countelement: function (e, t) {
            return this.count_element || (this.count_element = $('<div  class="confirm-count"><span class="btn" ac="0">最少</span><span ac="-10" class="btn">减10</span><input type="text" value="1" /><span class="btn"  ac="10" >加10</span><span class="btn" ac="1" >最多</span></div>')), e ? this.count_element.find("input").val(e) : this.count_element.find("input").val(1), t && (t = parseInt(t)), this.max_count = t || 1e3, this.count_element
        }, Show_shop: function (e) {
            var s = e[2];
            if (s) {
                var t = q.shop.selllist[s];
                t && this.Show({
                    content: this.get_countelement(), btn_text: "购买" + t.name, onOK: function () {
                        var e = U.count_element.find("input"), t = parseInt(e.val());
                        "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c("shop " + s + " " + t))
                    }
                })
            }
        }, Show_buy: function (s) {
            var i = s[3];
            if (i) {
                var e = parseInt(s[2]);
                this.Show({
                    content: this.get_countelement(1, -1 == e ? 1e3 : e), btn_text: "购买", onOK: function () {
                        var e = U.count_element.find("input"), t = parseInt(e.val());
                        "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c("buy " + t + " " + i + " from " + s[5]))
                    }
                })
            }
        }, Show_greet: function (e) {
            this.Show({
                content: this.get_countelement(1, 99), btn_text: "送花", onOK: function () {
                    var e = U.count_element.find("input"), t = parseInt(e.val());
                    "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c("greet " + t))
                }
            })
        }, Show_sell: function (s) {
            var i = s[3];
            i && this.Show({
                content: this.get_countelement(s[2], s[2]), btn_text: "卖出", onOK: function () {
                    var e = U.count_element.find("input"), t = parseInt(e.val());
                    "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c("sell " + t + " " + i + " to " + s[5]))
                }
            })
        }, Show_store: function (e) {
            var s = e[3];
            if (s) return 1 == e[2] ? c("store " + s) : void this.Show({
                content: this.get_countelement(e[2], e[2]),
                btn_text: "存入",
                onOK: function () {
                    var e = U.count_element.find("input"), t = parseInt(e.val());
                    "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c("store " + t + " " + s))
                }
            })
        }, Show_fenjie: function (e, t) {
            var s = e[2];
            if (s) {
                var i = q.pack.isShow ? q.pack.get_item(s) : q.pack2.get_item(s);
                if (i) return -1 == i.name.indexOf("★") ? c("fenjie " + s) : void this.Show({
                    content: "是否确认分解" + i.name + "？",
                    btn_text: "确认分解",
                    onOK: function () {
                        c(t + "fenjie " + s)
                    }
                })
            }
        }, Show_qu: function (e) {
            var s = e[2];
            if (s) {
                var t = q.list.find_item(3, s);
                if (t) return 1 == t.count ? c("qu 1 " + s) : void this.Show({
                    content: this.get_countelement(t.count, t.count),
                    btn_text: "取出",
                    onOK: function () {
                        var e = U.count_element.find("input"), t = parseInt(e.val());
                        "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c("qu " + t + " " + s))
                    }
                })
            }
        }, Show_drop: function (s, i) {
            var n = s[3];
            if (n) {
                var e = q.pack.isShow ? q.pack.get_item(n) : q.pack2.get_item(n);
                e && this.Show({
                    content: 1 == s[2] ? "是否确认丢掉" + e.name + "？" : this.get_countelement(s[2], s[2]),
                    btn_text: "丢掉",
                    onOK: function () {
                        if (1 == s[2]) return c(i + "drop " + n);
                        var e = U.count_element.find("input"), t = parseInt(e.val());
                        "NaN" == t.toString() && (t = 0), t > U.max_count && (t = U.max_count), c(i + "drop " + t + " " + n)
                    }
                })
            }
        }, Show_give: function (e, s) {
            var i = e[4];
            if (i) {
                var t = q.pack2.get_item(i);
                if (t) return 1 == t.count ? c(s + "give " + T.player + " 1 " + i) : void this.Show({
                    content: this.get_countelement(t.count, t.count),
                    btn_text: "拿来",
                    onOK: function () {
                        var e = U.count_element.find("input"), t = parseInt(e.val());
                        "NaN" == t.toString() && (t = 0), t > U.max_count && (t = U.max_count), c(s + "give " + T.player + " " + t + " " + i)
                    }
                })
            }
        }, Show_trade_add: function (i) {
            i && this.Show({
                content: this.get_countelement(i.count, i.count), btn_text: "确定", onOK: function () {
                    var e = U.count_element.find("input"), t = parseInt(e.val());
                    if (!("NaN" == t.toString() || t <= 0)) {
                        t > i.count && (t = i.count);
                        var s = N.Clone(i);
                        s.count = t, console.log(s), q.trade.add_trade(s)
                    }
                }
            })
        }, Show_fangqi: function (e, t) {
            var s = e[2];
            if (s) {
                var i = t ? q.master.skills[s] : q.skills.skills[s];
                i && this.Show({
                    content: "是否确认放弃技能" + i.name + "？", onOK: function () {
                        c(t + "fangqi " + s)
                    }
                })
            }
        }, Show_combine: function (e, s) {
            var i = e[2];
            if (i) {
                var t = q.pack.get_item(i);
                if (t) {
                    var n = parseInt(e[3]);
                    if (n) {
                        var o = parseInt(t.count / n);
                        if (1 == o) return c("combine " + i);
                        this.Show({
                            content: this.get_countelement(o), btn_text: "合成", onOK: function () {
                                var e = U.count_element.find("input"), t = parseInt(e.val());
                                "NaN" == t.toString() && (t = 0), t && (t > U.max_count && (t = U.max_count), c(s + "combine " + i + " " + t))
                            }
                        })
                    }
                }
            }
        }, Show_pay: function () {
            window.location.href = "/pay.html"
        }
    }, N = {
        Json2Str: function (e) {
            return "object" == typeof e ? null == e || null == e ? "" : JSON.stringify(e) : e
        }, Json2Str2: function (e) {
            return null == e || null == e ? "" : JSON.stringify(e)
        }, Date2Str: function (e) {
            return e.valueOf ? "/Date(" + e.valueOf() + ")/" : e
        }, Clone: function (e) {
            var t = {};
            for (var s in e) t[s] = e[s];
            return t
        }, Str2Json: function (e) {
            return "{" != e.substring(0, 1) && (e = "{" + e + "}"), new Function("return " + e)()
        }, Str2Json2: function (e) {
            return new Function("return " + e)()
        }, Str2XML: function (e) {
            var t;
            window.DOMParser ? t = (new DOMParser).parseFromString(e, "text/xml") : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(e));
            return $(t.documentElement)
        }, Settings: {MaxUploadFileLength: 31457280}, encode: function (e) {
            return encodeURIComponent(e)
        }, CookieHelper: {
            setCookie: function (e, t, s) {
                var i = e + "=" + escape(t);
                if (s) {
                    var n = new Date;
                    n.setTime(n.getTime() + 60 * s * 1e3), i += "; expires=" + n.toGMTString()
                }
                document.cookie = i
            }, getCookie: function (e) {
                return 0 < document.cookie.length && (begin = document.cookie.indexOf(e + "="), -1 != begin) ? (begin += e.length + 1, end = document.cookie.indexOf(";", begin), -1 == end && (end = document.cookie.length), unescape(document.cookie.substring(begin, end))) : ""
            }, delCookie: function (e) {
                if (this.getCookie(e)) {
                    var t = new Date;
                    t.setYear(1e3), document.cookie = e + "=;" + t.toGMTString()
                }
            }
        }, C_STR: "零一二三四五六七八九", C_STR2: ["", "十", "百", "千", "万", "亿"], C_STR3: ["", "万", "亿"], to_c: function (e) {
            if (!e) return "零";
            for (var t = "", s = 0, i = 0; e;) {
                var n = e % 10;
                s && (s % 4 == 0 && 3 != i ? (t = N.C_STR3[s / 4] + t, i = 3) : n && 2 != i && (t = N.C_STR2[s % 4] + t, i = 2)), n ? ((1 != n || 10 < e || s % 4 != 1) && (t = N.C_STR[n] + t), i = 1) : 1 == i && (t = N.C_STR[n] + t, i = 0), e = parseInt(e / 10), s++
            }
            return t
        }, Get: function (e, t, s) {
            if (e) {
                var i = [];
                if ($.isPlainObject(t)) {
                    for (var n in t) t[n] && i.push(n + "=" + N.encode(N.Json2Str(t[n])));
                    e = e + "?" + i.join("&")
                } else if ($.isFunction(t)) s = t; else if ($.isArray(t)) {
                    for (var o = 0; o < t.length; o++) i.push(N.encode(N.Json2Str(t[o])));
                    e = e + "/" + i.join("/")
                }
                var a = {url: "/" + e, callBack: s, type: "get"};
                return N.Request(a)
            }
        }, Post: function (e, t, s) {
            var i, n = [];
            if ($.isPlainObject(t)) {
                for (var o in t) t[o] && n.push(o + "=" + N.Json2Str(t[o]));
                i = n.join("&")
            } else {
                if (!t.length) return;
                for (var a = 0; a < t.length; a++) n.push(N.Json2Str(t[a]));
                i = N.Json2Str2(n)
            }
            var l = {url: "/" + e, data: i, callBack: s, type: "post"};
            return N.Request(l)
        }, Request: function (e) {
            var i = e.callBack, t = $.isFunction(i);
            e.isParseData;
            if ($.ajax(e.url, {
                data: e.data,
                type: e.type || "post",
                async: t,
                dataType: e.dataType || "json",
                statusCode: {
                    404: function () {
                    }
                },
                success: function (e) {
                    $.isFunction(i) && i(e)
                },
                error: function (e, t, s) {
                    s = e.responseText;
                    $.isFunction(i) && i(s)
                }
            }), 0 == t) return null
        }, RequestOver: function (e) {
            return !(e.Code < 0)
        }, ToDate: function () {
            if (0 == arguments.length) return new Date;
            if (1 == arguments.length) {
                var e = arguments[0].split("-");
                return new Date(e[0], parseInt(e[1]) - 1, e[2])
            }
            return new Date(arguments[0], arguments[1], arguments[2])
        }, CheckInputs: function (e, t) {
            for (var s = e.find("input"), i = 0; i < s.length; i++) {
                var n = $(s[i]).val(), o = !1;
                if (t) for (var a = 0; a < t.length; a++) t[a] != n || (o = !0);
                o ? $(s[i]).prop("checked", !0) : $(s[i]).removeProp("checked")
            }
        }
    };
    Array.prototype.Remove = function (e) {
        for (var t = this.length, s = 0; s < t; s++) if (this[s] == e) return this.splice(s, 1), this;
        return this
    }, Array.prototype.Has = function (e) {
        for (var t = this.length, s = 0; s < t; s++) if (this[s] == e) return !0;
        return !1
    }, Array.prototype.Map = function (e) {
        for (var t = this.length, s = [], i = 0; i < t; i++) {
            var n = e(this[i]);
            n && s.push(n)
        }
        return s
    }, Array.prototype.First = function (e) {
        for (var t = this.length, s = 0; s < t; s++) {
            var i = this[s];
            if (e(i)) return i
        }
        return null
    }, Array.prototype.Where = function (e) {
        for (var t = this.length, s = [], i = 0; i < t; i++) {
            var n = this[i];
            e(n) && s.push(n)
        }
        return s
    }, Date.prototype.AddDays = function (e) {
        return this.setDate(this.getDate() + e), this
    }, Date.prototype.AddMonths = function (e) {
        return this.setMonth(this.getMonth() + e), this
    }, Date.prototype.ToDateString = function () {
        var e = this.getMonth() + 1;
        e < 10 && (e = "0" + e);
        var t = this.getDate();
        return t < 10 && (t = "0" + t), this.getFullYear() + "-" + e + "-" + t
    }, Date.prototype.AddYears = function (e) {
        return this.setFullYear(this.getFullYear() + e), this
    };
    var F = 0, B = WebSocket;

    function L(e, t) {
        this.IP = e, this.Port = t
    }

    window.WebSocket = null, L.prototype.Connect = function (e) {
        try {
            location.protocol;
            this.ws = new B("ws://" + this.IP + ":" + this.Port), this.ws.onopen = this.OnConnect, this.ws.onclose = this.OnClose.bind(this), this.ws.onerror = this.OnError, this.ws.onmessage = this.OnReceived.bind(this), this.index = F++
        } catch (e) {
            this.OnError && this.OnError(e)
        }
    }, L.prototype.OnReceived = function (e) {
        if (e && e.data) {
            var t = e.data;
            if ("{" == t[0] || "[" == t[0]) {
                var s = new Function("return " + t + ";");
                this.OnData(s())
            } else this.OnMessage(t)
        }
    }, L.prototype.Send = function (e) {
        try {
            this.ws.send(e)
        } catch (e) {
            S(e)
        }
    }, L.prototype.Close = function () {
        this.ws.close()
    }, L.prototype.Connected = function () {
        return this.ws && 1 == this.ws.readyState
    };
    var G = {};
    G.UserAPI = {
        Login: function (e, t, s) {
            return N.Post("UserAPI/Login", {code: e, pwd: t}, s)
        }, Regist: function (e, t) {
            return N.Post("UserAPI/Regist", {user: e}, t)
        }, Enter: function (e, t) {
            return N.Get("e", [e], t)
        }, ChangePassword: function (e, t, s) {
            return N.Post("UserAPI/ChangePassword", {oldpwd: e, pwd: t}, s)
        }, LoginOut: function (e) {
            return N.Get("UserAPI/LoginOut", e)
        }, GetRoles: function (e, t) {
            return N.Get("UserAPI/GetRoles", [e], t)
        }, AddRole: function (e, t) {
            return N.Post("UserAPI/AddRole", {player: e}, t)
        }, GetUser: function (e) {
            return N.Get("UserAPI/GetUser", e)
        }, Search: function (e, t, s, i) {
            return N.Get("UserAPI/Search", [e, t, s], i)
        }, ResetPassword: function (e, t) {
            return N.Get("UserAPI/ResetPassword", [e], t)
        }, RecoverUser: function (e, t) {
            return N.Get("UserAPI/RecoverUser", [e], t)
        }, LoadPlayer: function (e, t, s) {
            return N.Get("UserAPI/LoadPlayer", [e, t], s)
        }, GetPhone: function (e) {
            return N.Get("UserAPI/GetPhone", e)
        }, BindPhone: function (e, t, s) {
            return N.Get("UserAPI/BindPhone", [e, t], s)
        }, SendValidateCode: function (e, t) {
            return N.Get("UserAPI/SendValidateCode", [e], t)
        }, ResetPasswordByPhone: function (e, t, s, i, n) {
            return N.Get("UserAPI/ResetPasswordByPhone", [e, t, s, i], n)
        }, NewServer: function (e) {
            return N.Get("UserAPI/NewServer", e)
        }, GetServer: function (e) {
            return N.Get("Game/GetServer", e)
        }
    }
}();